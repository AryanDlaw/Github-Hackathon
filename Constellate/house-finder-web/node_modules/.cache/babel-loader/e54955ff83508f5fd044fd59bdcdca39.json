{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _nullishCoalesce(lhs, rhsFn) {\n  if (lhs != null) {\n    return lhs;\n  } else {\n    return rhsFn();\n  }\n}\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i];\n    const fn = ops[i + 1];\n    i += 2;\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      return undefined;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => value.call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n} /**\n  * react-router v7.8.2\n  *\n  * Copyright (c) Remix Software Inc.\n  *\n  * This source code is licensed under the MIT license found in the\n  * LICENSE.md file in the root directory of this source tree.\n  *\n  * @license MIT\n  */\nvar __typeError = msg => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */(Action2 => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries;\n  entries = initialEntries.map((entry, index2) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index2 === 0 ? \"default\" : void 0));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", `relative pathnames are not supported in memory history: ${JSON.stringify(to)}`);\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window2.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", `relative pathnames are not supported in hash history.push(${JSON.stringify(to)})`);\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options = {}) {\n  let {\n    window: window2 = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({\n      ...globalHistory.state,\n      idx: index\n    }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    return createBrowserURLImpl(to);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\nfunction createBrowserURLImpl(to, isAbsolute = false) {\n  let base = \"http://localhost\";\n  if (typeof window !== \"undefined\") {\n    base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n  }\n  invariant(base, \"No window.location.(origin|href) available to create URL\");\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  if (!isAbsolute && href.startsWith(\"//\")) {\n    href = base + href;\n  }\n  return new URL(href, base);\n}\n\n// lib/router/utils.ts\nfunction unstable_createContext(defaultValue) {\n  return {\n    defaultValue\n  };\n}\nvar _map;\nvar unstable_RouterContextProvider = class {\n  /**\n   * Create a new `unstable_RouterContextProvider` instance\n   * @param init An optional initial context map to populate the provider with\n   */\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  /**\n   * Access a value from the context. If no value has been set for the context,\n   * it will return the context's `defaultValue` if provided, or throw an error\n   * if no `defaultValue` was set.\n   * @param context The context to get the value for\n   * @returns The value for the context, or the context's `defaultValue` if no\n   * value was set\n   */\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  /**\n   * Set a value for the context. If the context already has a value set, this\n   * will overwrite it.\n   *\n   * @param context The context to set the value for\n   * @param value The value to set for the context\n   * @returns {void}\n   */\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(key);\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"unstable_middleware\", \"children\"]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(key);\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath = [], manifest = {}, allowInPlaceMutations = false) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, `Cannot specify children on an index route`);\n    invariant(allowInPlaceMutations || !manifest[id], `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`);\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest, allowInPlaceMutations);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    loaderData: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\", _hasParentOptionalSegments = false) {\n  let flattenRoute = (route, index, hasParentOptionalSegments = _hasParentOptionalSegments, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      if (!meta.relativePath.startsWith(parentPath) && hasParentOptionalSegments) {\n        return;\n      }\n      invariant(meta.relativePath.startsWith(parentPath), `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`);\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`);\n      flattenRoutes(route.children, branches, routesMeta, path, hasParentOptionalSegments);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !_optionalChain([route, 'access', _2 => _2.path, 'optionalAccess', _3 => _3.includes, 'call', _4 => _4(\"?\")])) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, true, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`);\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify2 = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify2(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return encodeURIComponent(stringify2(param));\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, {\n    paramName,\n    isOptional\n  }, index) => {\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = void 0;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`);\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  }).replace(/\\/([\\w-]+)\\?(\\/|$)/g, \"(/$1)?$2\");\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {}\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`);\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction prependBasename({\n  basename,\n  pathname\n}) {\n  return pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(path)}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = {\n      ...toArg\n    };\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(data2, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, {\n    ...responseInit,\n    headers\n  });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\nvar validMutationMethods = new Set(validMutationMethodsArr);\nvar validRequestMethodsArr = [\"GET\", ...validMutationMethodsArr];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar isAbsoluteUrl = url => ABSOLUTE_URL_REGEX.test(url);\nvar defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let hydrationRouteProperties = init.hydrationRouteProperties || [];\n  let mapRouteProperties = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, void 0, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  if (!basename.startsWith(\"/\")) {\n    basename = `/${basename}`;\n  }\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */new Set();\n  let savedScrollPositions = null;\n  let getScrollRestorationKey = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  let initialized;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialized = true;\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  } else {\n    if (initialMatches && !init.hydrationData) {\n      let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active) {\n        initialMatches = null;\n      }\n    }\n    if (!initialMatches) {\n      initialized = false;\n      initialMatches = [];\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    } else if (initialMatches.some(m => m.route.lazy)) {\n      initialized = false;\n    } else if (!initialMatches.some(m => m.route.loader)) {\n      initialized = true;\n    } else {\n      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n      let errors = init.hydrationData ? init.hydrationData.errors : null;\n      if (errors) {\n        let idx = initialMatches.findIndex(m => errors[m.route.id] !== void 0);\n        initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n      } else {\n        initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n      }\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */new Map(),\n    blockers: /* @__PURE__ */new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */new Set();\n  let fetchControllers = /* @__PURE__ */new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */new Map();\n  let fetchRedirectIds = /* @__PURE__ */new Set();\n  let fetchLoadMatches = /* @__PURE__ */new Map();\n  let activeFetchers = /* @__PURE__ */new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */new Set();\n  let blockerFunctions = /* @__PURE__ */new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(({\n      action: historyAction,\n      location,\n      delta\n    }) => {\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = void 0;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: void 0,\n              reset: void 0,\n              location\n            });\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    if (newState.matches) {\n      newState.matches = newState.matches.map(m => {\n        let route = manifest[m.route.id];\n        let matchRoute = m.route;\n        if (matchRoute.element !== route.element || matchRoute.errorElement !== route.errorElement || matchRoute.hydrateFallbackElement !== route.hydrateFallbackElement) {\n          return {\n            ...m,\n            route\n          };\n        }\n        return m;\n      });\n    }\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: unmountedFetchers,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    unmountedFetchers.forEach(key => deleteFetcher(key));\n    mountedFetchers.forEach(key => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, {\n    flushSync\n  } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && _optionalChain([location, 'access', _5 => _5.state, 'optionalAccess', _6 => _6._isRedirect]) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let restoreScrollPosition = isUninterruptedRevalidation ? false : getSavedScrollPosition(location, newState.matches || state.matches);\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && _optionalChain([location, 'access', _7 => _7.state, 'optionalAccess', _8 => _8._isRedirect]) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {} else if (pendingAction === \"POP\" /* Pop */) {} else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState({\n      ...newState,\n      // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition,\n      preventScrollReset,\n      blockers\n    }, {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    _optionalChain([pendingRevalidationDfd, 'optionalAccess', _9 => _9.resolve, 'call', _10 => _10()]);\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, to, _optionalChain([opts, 'optionalAccess', _11 => _11.fromRouteId]), _optionalChain([opts, 'optionalAccess', _12 => _12.relative]));\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {} else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = _optionalChain([opts, 'optionalAccess', _13 => _13.initialHydration]) && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: \"error\" /* error */,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(request, location, opts.submission, matches, scopedContext, fogOfWar.active, opts && opts.initialHydration === true, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, scopedContext, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        if (discoverResult.partialMatches.length === 0) {\n          let {\n            matches: matches2,\n            route\n          } = getShortCircuitMatches(dataRoutes);\n          return {\n            matches: matches2,\n            pendingActionResult: [route.id, {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }]\n          };\n        }\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: \"error\" /* error */,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: \"error\" /* error */,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties, manifest, request, matches, actionMatch, initialHydration ? [] : hydrationRouteProperties, scopedContext);\n      let results = await callDataStrategy(request, dsMatches, scopedContext, null);\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result, actionMatch.route.id]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState({\n          navigation: loadingNavigation,\n          ...(actionData !== void 0 ? {\n            actionData\n          } : {})\n        }, {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        if (discoverResult.partialMatches.length === 0) {\n          let {\n            matches: matches2,\n            route\n          } = getShortCircuitMatches(dataRoutes);\n          return {\n            matches: matches2,\n            loaderData: {},\n            errors: {\n              [route.id]: discoverResult.error\n            }\n          };\n        }\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      dsMatches,\n      revalidatingFetchers\n    } = getMatchesToLoad(request, scopedContext, mapRouteProperties, manifest, init.history, state, matches, activeSubmission, location, initialHydration ? [] : hydrationRouteProperties, initialHydration === true, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, init.patchRoutesOnNavigation != null, pendingActionResult);\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some(m => m.shouldLoad) && !dsMatches.some(m => m.route.unstable_middleware) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        ...getActionDataForCommit(pendingActionResult),\n        ...(updatedFetchers2 ? {\n          fetchers: new Map(state.fetchers)\n        } : {})\n      }, {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(dsMatches, revalidatingFetchers, request, scopedContext);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults);\n    if (initialHydration && state.errors) {\n      errors = {\n        ...state.errors,\n        ...errors\n      };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {})\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, href, routeId, _optionalChain([opts, 'optionalAccess', _14 => _14.relative]));\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(key, routeId, path, matches, scopedContext, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    await handleFetcherLoader(key, routeId, path, matches, scopedContext, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  async function handleFetcherAction(key, routeId, path, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(requestMatches, path);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId\n      });\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(mapRouteProperties, manifest, fetchRequest, requestMatches, match, hydrationRouteProperties, scopedContext);\n    let actionResults = await callDataStrategy(fetchRequest, fetchMatches, scopedContext, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let {\n      dsMatches,\n      revalidatingFetchers\n    } = getMatchesToLoad(revalidationRequest, scopedContext, mapRouteProperties, manifest, init.history, state, matches, submission, nextLocation, hydrationRouteProperties, false, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, init.patchRoutesOnNavigation != null, [match.route.id, actionResult]);\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(dsMatches, revalidatingFetchers, revalidationRequest, scopedContext);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(revalidationRequest, redirect2.result, false, {\n        preventScrollReset\n      });\n    }\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, void 0, revalidatingFetchers, fetcherResults);\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(matches, path);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties, manifest, fetchRequest, matches, match, hydrationRouteProperties, scopedContext);\n    let results = await callDataStrategy(fetchRequest, dsMatches, scopedContext, key);\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (isAbsoluteUrl(location)) {\n        const url = createBrowserURLImpl(location, true);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, false);\n    } catch (e) {\n      matches.filter(m => m.shouldLoad).forEach(m => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    if (request.signal.aborted) {\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(request, matches, scopedContext, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.request && f.controller) {\n        let results = await callDataStrategy(f.request, f.matches, scopedContext, f.key);\n        let result = results[f.match.route.id];\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: \"error\" /* error */,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties, false);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, void 0, manifest);\n  }\n  function patchRoutes(routeId, children, unstable_allowElementMutations = false) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties, unstable_allowElementMutations);\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n    _internalSetStateDoNotUseOrYouWillBreakYourApp(newState) {\n      updateState(newState);\n    }\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties = _optionalChain([opts, 'optionalAccess', _15 => _15.mapRouteProperties]) || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, void 0, manifest);\n  async function query(request, {\n    requestContext,\n    filterMatchesToLoad,\n    skipLoaderErrorBubbling,\n    skipRevalidation,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    }\n    if (generateMiddlewareResponse) {\n      invariant(requestContext instanceof unstable_RouterContextProvider, \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\");\n      try {\n        await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties);\n        let renderedStaticContext;\n        let response = await runServerMiddlewarePipeline({\n          request,\n          matches,\n          params: matches[0].params,\n          // If we're calling middleware then it must be enabled so we can cast\n          // this to the proper type knowing it's not an `AppLoadContext`\n          context: requestContext\n        }, async () => {\n          let res = await generateMiddlewareResponse(async (revalidationRequest, opts2 = {}) => {\n            let result2 = await queryImpl(revalidationRequest, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null, \"filterMatchesToLoad\" in opts2 ? _nullishCoalesce(opts2.filterMatchesToLoad, () => null) : null, skipRevalidation === true);\n            if (isResponse(result2)) {\n              return result2;\n            }\n            renderedStaticContext = {\n              location,\n              basename,\n              ...result2\n            };\n            return renderedStaticContext;\n          });\n          return res;\n        }, async (error, routeId) => {\n          if (isRedirectResponse(error)) {\n            return error;\n          }\n          if (isResponse(error)) {\n            try {\n              error = new ErrorResponseImpl(error.status, error.statusText, await parseResponseBody(error));\n            } catch (e) {\n              error = e;\n            }\n          }\n          if (isDataWithResponseInit(error)) {\n            error = dataWithResponseInitToErrorResponse(error);\n          }\n          if (renderedStaticContext) {\n            if (routeId in renderedStaticContext.loaderData) {\n              renderedStaticContext.loaderData[routeId] = void 0;\n            }\n            let staticContext = getStaticContextFromError(dataRoutes, renderedStaticContext, error, skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id);\n            return generateMiddlewareResponse(() => Promise.resolve(staticContext));\n          } else {\n            let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, _optionalChain([matches, 'access', _16 => _16.find, 'call', _17 => _17(m => m.route.id === routeId || m.route.loader), 'optionalAccess', _18 => _18.route, 'access', _19 => _19.id]) || routeId).route.id;\n            let staticContext = {\n              matches,\n              location,\n              basename,\n              loaderData: {},\n              actionData: null,\n              errors: {\n                [boundaryRouteId]: error\n              },\n              statusCode: isRouteErrorResponse(error) ? error.status : 500,\n              actionHeaders: {},\n              loaderHeaders: {}\n            };\n            return generateMiddlewareResponse(() => Promise.resolve(staticContext));\n          }\n        });\n        invariant(isResponse(response), \"Expected a response in query()\");\n        return response;\n      } catch (e) {\n        if (isResponse(e)) {\n          return e;\n        }\n        throw e;\n      }\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null, filterMatchesToLoad || null, skipRevalidation === true);\n    if (isResponse(result)) {\n      return result;\n    }\n    return {\n      location,\n      basename,\n      ...result\n    };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    if (generateMiddlewareResponse) {\n      invariant(requestContext instanceof unstable_RouterContextProvider, \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\");\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties);\n      let response = await runServerMiddlewarePipeline({\n        request,\n        matches,\n        params: matches[0].params,\n        // If we're calling middleware then it must be enabled so we can cast\n        // this to the proper type knowing it's not an `AppLoadContext`\n        context: requestContext\n      }, async () => {\n        let res = await generateMiddlewareResponse(async innerRequest => {\n          let result2 = await queryImpl(innerRequest, location, matches, requestContext, dataStrategy || null, false, match, null, false);\n          let processed = handleQueryResult(result2);\n          return isResponse(processed) ? processed : typeof processed === \"string\" ? new Response(processed) : Response.json(processed);\n        });\n        return res;\n      }, error => {\n        if (isDataWithResponseInit(error)) {\n          return Promise.resolve(dataWithResponseInitToResponse(error));\n        }\n        if (isResponse(error)) {\n          return Promise.resolve(error);\n        }\n        throw error;\n      });\n      return response;\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match, null, false);\n    return handleQueryResult(result);\n    function handleQueryResult(result2) {\n      if (isResponse(result2)) {\n        return result2;\n      }\n      let error = result2.errors ? Object.values(result2.errors)[0] : void 0;\n      if (error !== void 0) {\n        throw error;\n      }\n      if (result2.actionData) {\n        return Object.values(result2.actionData)[0];\n      }\n      if (result2.loaderData) {\n        return Object.values(result2.loaderData)[0];\n      }\n      return void 0;\n    }\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null, filterMatchesToLoad, skipRevalidation);\n        return result2;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad);\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(mapRouteProperties, manifest, request, matches, actionMatch, [], requestContext);\n      let results = await callDataStrategy(request, dsMatches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    if (skipRevalidation) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n          actionData: null,\n          actionHeaders: {\n            ...(result.headers ? {\n              [actionMatch.route.id]: result.headers\n            } : {})\n          },\n          matches,\n          loaderData: {},\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          loaderHeaders: {}\n        };\n      } else {\n        return {\n          actionData: {\n            [actionMatch.route.id]: result.data\n          },\n          actionHeaders: result.headers ? {\n            [actionMatch.route.id]: result.headers\n          } : {},\n          matches,\n          loaderData: {},\n          errors: null,\n          statusCode: result.statusCode || 200,\n          loaderHeaders: {}\n        };\n      }\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let handlerContext2 = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, filterMatchesToLoad, [boundaryMatch.route.id, result]);\n      return {\n        ...handlerContext2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? {\n            [actionMatch.route.id]: result.headers\n          } : {})\n        }\n      };\n    }\n    let handlerContext = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, filterMatchesToLoad);\n    return {\n      ...handlerContext,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? {\n        statusCode: result.statusCode\n      } : {}),\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !_optionalChain([routeMatch, 'optionalAccess', _20 => _20.route, 'access', _21 => _21.loader]) && !_optionalChain([routeMatch, 'optionalAccess', _22 => _22.route, 'access', _23 => _23.lazy])) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: _optionalChain([routeMatch, 'optionalAccess', _24 => _24.route, 'access', _25 => _25.id])\n      });\n    }\n    let dsMatches;\n    if (routeMatch) {\n      dsMatches = getTargetedDataStrategyMatches(mapRouteProperties, manifest, request, matches, routeMatch, [], requestContext);\n    } else {\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ?\n      // Up to but not including the boundary\n      matches.findIndex(m => m.route.id === pendingActionResult[0]) - 1 : void 0;\n      dsMatches = matches.map((match, index) => {\n        if (maxIdx != null && index > maxIdx) {\n          return getDataStrategyMatch(mapRouteProperties, manifest, request, match, [], requestContext, false);\n        }\n        return getDataStrategyMatch(mapRouteProperties, manifest, request, match, [], requestContext, (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match)));\n      });\n    }\n    if (!dataStrategy && !dsMatches.some(m => m.shouldLoad)) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(request, dsMatches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let handlerContext = processRouteLoaderData(matches, results, pendingActionResult, true, skipLoaderErrorBubbling);\n    return {\n      ...handlerContext,\n      matches\n    };\n  }\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, request, matches, null, requestContext, true);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename);\n      }\n      if (isRouteRequest) {\n        if (isResponse(result.result)) {\n          throw result;\n        } else if (isDataWithResponseInit(result.result)) {\n          throw dataWithResponseInitToResponse(result.result);\n        }\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\n  return {\n    ...handlerContext,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [errorBoundaryId]: error\n    }\n  };\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = prependBasename({\n      basename,\n      pathname: path.pathname\n    });\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, [name, value]) => `${acc}${name}=${value}\n`, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, hasPatchRoutesOnNavigation, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex(m => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex(m => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: _optionalChain([state, 'access', _26 => _26.matches, 'access', _27 => _27[0], 'optionalAccess', _28 => _28.params]) || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let {\n      route\n    } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(mapRouteProperties, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, forceShouldLoad);\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false :\n    // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n    isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match);\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(mapRouteProperties, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, shouldRevalidateArgs);\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let isMidInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0;\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      if (hasPatchRoutesOnNavigation && isMidInitialLoad) {\n        return;\n      }\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(history, f.path, fetchController.signal);\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext);\n    } else if (isMidInitialLoad) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext);\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(mapRouteProperties, manifest, fetchRequest, fetcherMatches, fetcherMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs);\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return {\n    dsMatches,\n    revalidatingFetchers\n  };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && route.id in loaderData;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties, allowElementMutations) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, `No route found to patch children into: routeId = ${routeId}`);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = [];\n  let existingChildren = [];\n  children.forEach(newRoute => {\n    let existingRoute = childrenToPatch.find(existingRoute2 => isSameRoute(newRoute, existingRoute2));\n    if (existingRoute) {\n      existingChildren.push({\n        existingRoute,\n        newRoute\n      });\n    } else {\n      uniqueChildren.push(newRoute);\n    }\n  });\n  if (uniqueChildren.length > 0) {\n    let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(_optionalChain([childrenToPatch, 'optionalAccess', _29 => _29.length]) || \"0\")], manifest);\n    childrenToPatch.push(...newRoutes);\n  }\n  if (allowElementMutations && existingChildren.length > 0) {\n    for (let i = 0; i < existingChildren.length; i++) {\n      let {\n        existingRoute,\n        newRoute\n      } = existingChildren[i];\n      let existingRouteTyped = existingRoute;\n      let [newRouteTyped] = convertRoutesToDataRoutes([newRoute], mapRouteProperties, [],\n      // Doesn't matter for mutated routes since they already have an id\n      {},\n      // Don't touch the manifest here since we're updating in place\n      true);\n      Object.assign(existingRouteTyped, {\n        element: newRouteTyped.element ? newRouteTyped.element : existingRouteTyped.element,\n        errorElement: newRouteTyped.errorElement ? newRouteTyped.errorElement : existingRouteTyped.errorElement,\n        hydrateFallbackElement: newRouteTyped.hydrateFallbackElement ? newRouteTyped.hydrateFallbackElement : existingRouteTyped.hydrateFallbackElement\n      });\n    }\n  }\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every((aChild, i) => _optionalChain([existingRoute, 'access', _30 => _30.children, 'optionalAccess', _31 => _31.some, 'call', _32 => _32(bChild => isSameRoute(aChild, bChild))]));\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(!isUnsupported, \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\");\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(false, `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`);\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, {\n          [key]: value\n        });\n        Object.assign(routeToUpdate, mapRouteProperties(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every(value => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(typeof route.lazy === \"function\", \"No lazy route function found\");\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 &&\n        // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(!isUnsupported, \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\");\n        } else if (isStaticallyDefined) {\n          warning(!isStaticallyDefined, `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`);\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {});\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {}) : void 0;\n  _optionalChain([lazyRoutePromise, 'optionalAccess', _33 => _33.catch, 'call', _34 => _34(() => {})]);\n  _optionalChain([lazyHandlerPromise, 'optionalAccess', _35 => _35.catch, 'call', _36 => _36(() => {})]);\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nfunction isNonNullable(value) {\n  return value !== void 0;\n}\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties) {\n  let promises = matches.map(({\n    route\n  }) => {\n    if (typeof route.lazy !== \"object\" || !route.lazy.unstable_middleware) {\n      return void 0;\n    }\n    return loadLazyRouteProperty({\n      key: \"unstable_middleware\",\n      route,\n      manifest,\n      mapRouteProperties\n    });\n  }).filter(isNonNullable);\n  return promises.length > 0 ? Promise.all(promises) : void 0;\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter(m => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some(m => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runClientMiddlewarePipeline(args, () => defaultDataStrategy(args));\n}\nfunction runServerMiddlewarePipeline(args, handler, errorHandler) {\n  return runMiddlewarePipeline(args, handler, processResult, isResponse, errorHandler);\n  function processResult(result) {\n    return isDataWithResponseInit(result) ? dataWithResponseInitToResponse(result) : result;\n  }\n}\nfunction runClientMiddlewarePipeline(args, handler) {\n  return runMiddlewarePipeline(args, handler, r => r,\n  // No post-processing needed on the client\n  isDataStrategyResults, errorHandler);\n  function errorHandler(error, routeId, nextResult) {\n    if (nextResult) {\n      return Promise.resolve(Object.assign(nextResult.value, {\n        [routeId]: {\n          type: \"error\",\n          result: error\n        }\n      }));\n    } else {\n      let {\n        matches\n      } = args;\n      let maxBoundaryIdx = Math.min(\n      // Throwing route\n      matches.findIndex(m => m.route.id === routeId) || 0,\n      // or the shallowest route that needs to load data\n      matches.findIndex(m => m.unstable_shouldCallHandler()) || 0);\n      let boundaryRouteId = findNearestBoundary(matches, matches[maxBoundaryIdx].route.id).route.id;\n      return Promise.resolve({\n        [boundaryRouteId]: {\n          type: \"error\",\n          result: error\n        }\n      });\n    }\n  }\n}\nasync function runMiddlewarePipeline(args, handler, processResult, isResult, errorHandler) {\n  let {\n    matches,\n    request,\n    params,\n    context\n  } = args;\n  let tuples = matches.flatMap(m => m.route.unstable_middleware ? m.route.unstable_middleware.map(fn => [m.route.id, fn]) : []);\n  let result = await callRouteMiddleware({\n    request,\n    params,\n    context\n  }, tuples, handler, processResult, isResult, errorHandler);\n  return result;\n}\nasync function callRouteMiddleware(args, middlewares, handler, processResult, isResult, errorHandler, idx = 0) {\n  let {\n    request\n  } = args;\n  if (request.signal.aborted) {\n    throw _nullishCoalesce(request.signal.reason, () => new Error(`Request aborted: ${request.method} ${request.url}`));\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    let result = await handler();\n    return result;\n  }\n  let [routeId, middleware] = tuple;\n  let nextResult;\n  let next = async () => {\n    if (nextResult) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    try {\n      let result = await callRouteMiddleware(args, middlewares, handler, processResult, isResult, errorHandler, idx + 1);\n      nextResult = {\n        value: result\n      };\n      return nextResult.value;\n    } catch (error) {\n      nextResult = {\n        value: await errorHandler(error, routeId, nextResult)\n      };\n      return nextResult.value;\n    }\n  };\n  try {\n    let value = await middleware(args, next);\n    let result = value != null ? processResult(value) : void 0;\n    if (isResult(result)) {\n      return result;\n    } else if (nextResult) {\n      return _nullishCoalesce(result, () => nextResult.value);\n    } else {\n      nextResult = {\n        value: await next()\n      };\n      return nextResult.value;\n    }\n  } catch (error) {\n    let response = await errorHandler(error, routeId, nextResult);\n    return response;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties\n  });\n  let lazyRoutePromises = loadLazyRoute(match.route, isMutationMethod(request.method) ? \"action\" : \"loader\", manifest, mapRouteProperties, lazyRoutePropertiesToSkip);\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(mapRouteProperties, manifest, request, match, lazyRoutePropertiesToSkip);\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && !isMutationMethod(request.method) && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _optionalChain([_lazyPromises, 'optionalAccess', _37 => _37.handler]),\n          lazyRoutePromise: _optionalChain([_lazyPromises, 'optionalAccess', _38 => _38.route]),\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({\n        type: \"data\" /* data */,\n        result: void 0\n      });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map(match => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(mapRouteProperties, manifest, request, match, lazyRoutePropertiesToSkip),\n        resolve: () => Promise.resolve({\n          type: \"data\",\n          result: void 0\n        })\n      };\n    }\n    return getDataStrategyMatch(mapRouteProperties, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, true, shouldRevalidateArgs);\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some(m => _optionalChain([m, 'access', _39 => _39._lazyPromises, 'optionalAccess', _40 => _40.middleware]))) {\n    await Promise.all(matches.map(m => _optionalChain([m, 'access', _41 => _41._lazyPromises, 'optionalAccess', _42 => _42.middleware])));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\");\n  } : cb => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runClientMiddlewarePipeline(typedDataStrategyArgs, () => {\n      return cb({\n        ...typedDataStrategyArgs,\n        fetcherKey,\n        unstable_runClientMiddleware: () => {\n          throw new Error(\"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\");\n        }\n      });\n    });\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(matches.flatMap(m => [_optionalChain([m, 'access', _43 => _43._lazyPromises, 'optionalAccess', _44 => _44.handler]), _optionalChain([m, 'access', _45 => _45._lazyPromises, 'optionalAccess', _46 => _46.route])]));\n  } catch (e) {}\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = handler => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(`You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: scopedContext\n      }, ...(ctx !== void 0 ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }),\n        // Ensure all lazy route promises are resolved before continuing\n        lazyHandlerPromise, lazyRoutePromise]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return {\n            type: \"data\" /* data */,\n            result: void 0\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return {\n      type: \"error\" /* error */,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function parseResponseBody(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n    return response.body == null ? null : response.json();\n  }\n  return response.text();\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      data2 = await parseResponseBody(result);\n    } catch (e) {\n      return {\n        type: \"error\" /* error */,\n        error: e\n      };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: _optionalChain([result, 'access', _47 => _47.init, 'optionalAccess', _48 => _48.status]),\n          headers: _optionalChain([result, 'access', _49 => _49.init, 'optionalAccess', _50 => _50.headers]) ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(_optionalChain([result, 'access', _51 => _51.init, 'optionalAccess', _52 => _52.status]) || 500, void 0, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: _optionalChain([result, 'access', _53 => _53.init, 'optionalAccess', _54 => _54.headers]) ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: _optionalChain([result, 'access', _55 => _55.init, 'optionalAccess', _56 => _56.status]),\n      headers: _optionalChain([result, 'access', _57 => _57.init, 'optionalAccess', _58 => _58.headers]) ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return {\n    type: \"data\" /* data */,\n    data: result\n  };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!isAbsoluteUrl(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, location);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (isAbsoluteUrl(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    if (pendingActionResult[2]) {\n      loaderData[pendingActionResult[2]] = void 0;\n    }\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult);\n  revalidatingFetchers.filter(f => !f.matches || f.matches.some(m => m.shouldLoad)).forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    if (controller && controller.signal.aborted) {\n      return;\n    }\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, _optionalChain([match, 'optionalAccess', _59 => _59.route, 'access', _60 => _60.id]));\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({\n    ...parsedPath,\n    hash: \"\"\n  });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction dataWithResponseInitToResponse(data2) {\n  return Response.json(data2.data, _nullishCoalesce(data2.init, () => void 0));\n}\nfunction dataWithResponseInitToErrorResponse(data2) {\n  return new ErrorResponseImpl(_nullishCoalesce(_optionalChain([data2, 'access', _61 => _61.init, 'optionalAccess', _62 => _62.status]), () => 500), _nullishCoalesce(_optionalChain([data2, 'access', _63 => _63.init, 'optionalAccess', _64 => _64.statusText]), () => \"Internal Server Error\"), data2.data);\n}\nfunction isDataStrategyResults(result) {\n  return result != null && typeof result === \"object\" && Object.entries(result).every(([key, value]) => typeof key === \"string\" && isDataStrategyResult(value));\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {}\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, `Failed to save applied view transitions in sessionStorage (${error}).`);\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async val => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n    reject = async error => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar _react = require('react');\nvar React = _interopRequireWildcard(_react);\nvar React2 = _interopRequireWildcard(_react);\nvar React3 = _interopRequireWildcard(_react);\nvar React8 = _interopRequireWildcard(_react);\nvar React7 = _interopRequireWildcard(_react);\nvar React6 = _interopRequireWildcard(_react);\nvar React5 = _interopRequireWildcard(_react);\nvar React4 = _interopRequireWildcard(_react);\n\n// vendor/turbo-stream-v2/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred = class {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, {\n        stream: true\n      });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// vendor/turbo-stream-v2/flatten.ts\nfunction flatten(input) {\n  const {\n    indices\n  } = this;\n  const existing = indices.get(input);\n  if (existing) return [existing];\n  if (input === void 0) return UNDEFINED;\n  if (input === null) return NULL;\n  if (Number.isNaN(input)) return NAN;\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const {\n    deferred,\n    plugins,\n    postPlugins\n  } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = obj => Object.keys(obj).map(k => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\":\n        {\n          const keyFor = Symbol.keyFor(input2);\n          if (!keyFor) {\n            error = new Error(\"Cannot encode symbol unless created with Symbol.for()\");\n          } else {\n            str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n          }\n          break;\n        }\n      case \"object\":\n        {\n          if (!input2) {\n            str[index2] = `${NULL}`;\n            break;\n          }\n          const isArray = Array.isArray(input2);\n          let pluginHandled = false;\n          if (!isArray && plugins) {\n            for (const plugin of plugins) {\n              const pluginResult = plugin(input2);\n              if (Array.isArray(pluginResult)) {\n                pluginHandled = true;\n                const [pluginIdentifier, ...rest] = pluginResult;\n                str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n                if (rest.length > 0) {\n                  str[index2] += `,${rest.map(v => flatten.call(this, v)).join(\",\")}`;\n                }\n                str[index2] += \"]\";\n                break;\n              }\n            }\n          }\n          if (!pluginHandled) {\n            let result = isArray ? \"[\" : \"{\";\n            if (isArray) {\n              for (let i = 0; i < input2.length; i++) result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n              str[index2] = `${result}]`;\n            } else if (input2 instanceof Date) {\n              const dateTime = input2.getTime();\n              str[index2] = `[\"${TYPE_DATE}\",${Number.isNaN(dateTime) ? JSON.stringify(\"invalid\") : dateTime}]`;\n            } else if (input2 instanceof URL) {\n              str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n            } else if (input2 instanceof RegExp) {\n              str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(input2.source)},${JSON.stringify(input2.flags)}]`;\n            } else if (input2 instanceof Set) {\n              if (input2.size > 0) {\n                str[index2] = `[\"${TYPE_SET}\",${[...input2].map(val => flatten.call(this, val)).join(\",\")}]`;\n              } else {\n                str[index2] = `[\"${TYPE_SET}\"]`;\n              }\n            } else if (input2 instanceof Map) {\n              if (input2.size > 0) {\n                str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [flatten.call(this, k), flatten.call(this, v)]).join(\",\")}]`;\n              } else {\n                str[index2] = `[\"${TYPE_MAP}\"]`;\n              }\n            } else if (input2 instanceof Promise) {\n              str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n              deferred[index2] = input2;\n            } else if (input2 instanceof Error) {\n              str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n              if (input2.name !== \"Error\") {\n                str[index2] += `,${JSON.stringify(input2.name)}`;\n              }\n              str[index2] += \"]\";\n            } else if (Object.getPrototypeOf(input2) === null) {\n              str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n            } else if (isPlainObject(input2)) {\n              str[index2] = `{${partsForObj(input2)}}`;\n            } else {\n              error = new Error(\"Cannot encode object with prototype\");\n            }\n          }\n          break;\n        }\n      default:\n        {\n          const isArray = Array.isArray(input2);\n          let pluginHandled = false;\n          if (!isArray && plugins) {\n            for (const plugin of plugins) {\n              const pluginResult = plugin(input2);\n              if (Array.isArray(pluginResult)) {\n                pluginHandled = true;\n                const [pluginIdentifier, ...rest] = pluginResult;\n                str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n                if (rest.length > 0) {\n                  str[index2] += `,${rest.map(v => flatten.call(this, v)).join(\",\")}`;\n                }\n                str[index2] += \"]\";\n                break;\n              }\n            }\n          }\n          if (!pluginHandled) {\n            error = new Error(\"Cannot encode function or unexpected type\");\n          }\n        }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map(v => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// vendor/turbo-stream-v2/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const {\n    hydrated,\n    values\n  } = this;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const {\n    hydrated,\n    values,\n    deferred,\n    plugins\n  } = this;\n  let result;\n  const stack = [[index, v => {\n    result = v;\n  }]];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */new Set();\n            hydrated[index2] = newSet;\n            for (let i = value.length - 1; i > 0; i--) stack.push([value[i], v => {\n              newSet.add(v);\n            }]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */new Map();\n            hydrated[index2] = map;\n            for (let i = value.length - 2; i > 0; i -= 2) {\n              const r = [];\n              stack.push([value[i + 1], v => {\n                r[1] = v;\n              }]);\n              stack.push([value[i], k => {\n                r[0] = k;\n              }]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([b[key], v => {\n                r[1] = v;\n              }]);\n              stack.push([Number(key.slice(1)), k => {\n                r[0] = k;\n              }]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([v, v2 => {\n                  r[i] = v2;\n                }]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([n, v => {\n              array[i] = v;\n            }]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([value[key], v => {\n          r[1] = v;\n        }]);\n        stack.push([Number(key.slice(1)), k => {\n          r[0] = k;\n        }]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// vendor/turbo-stream-v2/turbo-stream.ts\nasync function decode(readable, options) {\n  const {\n    plugins\n  } = _nullishCoalesce(options, () => ({}));\n  const done = new Deferred();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch(reason => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value) continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE:\n        {\n          const colonIndex = line.indexOf(\":\");\n          const deferredId = Number(line.slice(1, colonIndex));\n          const deferred = this.deferred[deferredId];\n          if (!deferred) {\n            throw new Error(`Deferred ID ${deferredId} not found in stream`);\n          }\n          const lineData = line.slice(colonIndex + 1);\n          let jsonLine;\n          try {\n            jsonLine = JSON.parse(lineData);\n          } catch (reason) {\n            throw new SyntaxError();\n          }\n          const value = unflatten.call(this, jsonLine);\n          deferred.resolve(value);\n          break;\n        }\n      case TYPE_ERROR:\n        {\n          const colonIndex = line.indexOf(\":\");\n          const deferredId = Number(line.slice(1, colonIndex));\n          const deferred = this.deferred[deferredId];\n          if (!deferred) {\n            throw new Error(`Deferred ID ${deferredId} not found in stream`);\n          }\n          const lineData = line.slice(colonIndex + 1);\n          let jsonLine;\n          try {\n            jsonLine = JSON.parse(lineData);\n          } catch (reason) {\n            throw new SyntaxError();\n          }\n          const value = unflatten.call(this, jsonLine);\n          deferred.reject(value);\n          break;\n        }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const {\n    plugins,\n    postPlugins,\n    signal\n  } = _nullishCoalesce(options, () => ({}));\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`));\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */new WeakSet();\n      if (Object.keys(encoder.deferred).length) {\n        let raceDone;\n        const racePromise = new Promise((resolve, reject) => {\n          raceDone = resolve;\n          if (signal) {\n            const rejectPromise = () => reject(signal.reason || new Error(\"Signal was aborted.\"));\n            if (signal.aborted) {\n              rejectPromise();\n            } else {\n              signal.addEventListener(\"abort\", event => {\n                rejectPromise();\n              });\n            }\n          }\n        });\n        while (Object.keys(encoder.deferred).length > 0) {\n          for (const [deferredId, deferred] of Object.entries(encoder.deferred)) {\n            if (seenPromises.has(deferred)) continue;\n            seenPromises.add(\n            // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n            encoder.deferred[Number(deferredId)] = Promise.race([racePromise, deferred]).then(resolved => {\n              const id2 = flatten.call(encoder, resolved);\n              if (Array.isArray(id2)) {\n                controller.enqueue(textEncoder.encode(`${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`));\n                encoder.index++;\n                lastSentIndex++;\n              } else if (id2 < 0) {\n                controller.enqueue(textEncoder.encode(`${TYPE_PROMISE}${deferredId}:${id2}\n`));\n              } else {\n                const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                controller.enqueue(textEncoder.encode(`${TYPE_PROMISE}${deferredId}:[${values}]\n`));\n                lastSentIndex = encoder.stringified.length - 1;\n              }\n            }, reason => {\n              if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                reason = new Error(\"An unknown error occurred\");\n              }\n              const id2 = flatten.call(encoder, reason);\n              if (Array.isArray(id2)) {\n                controller.enqueue(textEncoder.encode(`${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`));\n                encoder.index++;\n                lastSentIndex++;\n              } else if (id2 < 0) {\n                controller.enqueue(textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}\n`));\n              } else {\n                const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                controller.enqueue(textEncoder.encode(`${TYPE_ERROR}${deferredId}:[${values}]\n`));\n                lastSentIndex = encoder.stringified.length - 1;\n              }\n            }).finally(() => {\n              delete encoder.deferred[Number(deferredId)];\n            }));\n          }\n          await Promise.race(Object.values(encoder.deferred));\n        }\n        raceDone();\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = {\n    signal: request.signal\n  };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return {\n    __html: html\n  };\n}\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar SingleFetchNoResultError = class extends Error {};\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */new Set([100, 101, 204, 205]);\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let {\n    streamCache\n  } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then(result => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, {\n          stream: true\n        })\n      };\n    }).catch(e => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let {\n    done,\n    value\n  } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */React.createElement(\"script\", {\n    nonce,\n    dangerouslySetInnerHTML: {\n      __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(JSON.stringify(value))});`\n    }\n  }) : null;\n  if (done) {\n    return /* @__PURE__ */React.createElement(React.Fragment, null, scriptTag, /* @__PURE__ */React.createElement(\"script\", {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.close();`\n      }\n    }));\n  } else {\n    return /* @__PURE__ */React.createElement(React.Fragment, null, scriptTag, /* @__PURE__ */React.createElement(React.Suspense, null, /* @__PURE__ */React.createElement(StreamTransfer, {\n      context,\n      identifier: identifier + 1,\n      reader,\n      textDecoder,\n      nonce\n    })));\n  }\n}\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(getRouter, match => {\n    let manifestRoute = manifest.routes[match.route.id];\n    invariant2(manifestRoute, \"Route not found in manifest\");\n    let routeModule = routeModules[match.route.id];\n    return {\n      hasLoader: manifestRoute.hasLoader,\n      hasClientLoader: manifestRoute.hasClientLoader,\n      hasShouldRevalidate: Boolean(_optionalChain([routeModule, 'optionalAccess', _65 => _65.shouldRevalidate]))\n    };\n  }, fetchAndDecodeViaTurboStream, ssr, basename);\n  return async args => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  return async args => {\n    let {\n      request,\n      matches,\n      fetcherKey\n    } = args;\n    let router = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some(m => {\n      let {\n        hasLoader,\n        hasClientLoader\n      } = getRouteInfo(m);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut);\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find(m => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async handler => {\n    let result2 = await handler(async () => {\n      let {\n        data: data2,\n        status\n      } = await fetchAndDecode(args, basename, [actionMatch.route.id]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {\n    return {\n      [actionMatch.route.id]: result\n    };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(m => m.unstable_shouldCallHandler());\n  let results = {};\n  await Promise.all(matchesToLoad.map(m => m.resolve(async handler => {\n    try {\n      let {\n        hasClientLoader\n      } = getRouteInfo(m);\n      let routeId = m.route.id;\n      let result = hasClientLoader ? await handler(async () => {\n        let {\n          data: data2\n        } = await fetchAndDecode(args, basename, [routeId]);\n        return unwrapSingleFetchResult(data2, routeId);\n      }) : await handler();\n      results[m.route.id] = {\n        type: \"data\",\n        result\n      };\n    } catch (e) {\n      results[m.route.id] = {\n        type: \"error\",\n        result: e\n      };\n    }\n  })));\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  let routesParams = /* @__PURE__ */new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(args.matches.map(async (m, i) => m.resolve(async handler => {\n    routeDfds[i].resolve();\n    let routeId = m.route.id;\n    let {\n      hasLoader,\n      hasClientLoader,\n      hasShouldRevalidate\n    } = getRouteInfo(m);\n    let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n    let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n    if (!shouldCall) {\n      foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null &&\n      // This is a revalidation,\n      hasLoader &&\n      // for a route with a server loader,\n      hasShouldRevalidate === true);\n      return;\n    }\n    if (shouldAllowOptOut(m) && hasClientLoader) {\n      if (hasLoader) {\n        foundOptOutRoute = true;\n      }\n      try {\n        let result = await handler(async () => {\n          let {\n            data: data2\n          } = await fetchAndDecode(args, basename, [routeId]);\n          return unwrapSingleFetchResult(data2, routeId);\n        });\n        results[routeId] = {\n          type: \"data\",\n          result\n        };\n      } catch (e) {\n        results[routeId] = {\n          type: \"error\",\n          result: e\n        };\n      }\n      return;\n    }\n    if (hasLoader) {\n      routesParams.add(routeId);\n    }\n    try {\n      let result = await handler(async () => {\n        let data2 = await singleFetchDfd.promise;\n        return unwrapSingleFetchResult(data2, routeId);\n      });\n      results[routeId] = {\n        type: \"data\",\n        result\n      };\n    } catch (e) {\n      results[routeId] = {\n        type: \"error\",\n        result: e\n      };\n    }\n  })));\n  await Promise.all(routeDfds.map(d => d.promise));\n  let isInitialLoad = !router.state.initialized && router.state.navigation.state === \"idle\";\n  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({\n      routes: {}\n    });\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  await bubbleMiddlewareErrors(singleFetchDfd.promise, args.matches, routesParams, results);\n  return results;\n}\nasync function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {\n  try {\n    let middlewareError;\n    let fetchedData = await singleFetchPromise;\n    if (\"routes\" in fetchedData) {\n      for (let match of matches) {\n        if (match.route.id in fetchedData.routes) {\n          let routeResult = fetchedData.routes[match.route.id];\n          if (\"error\" in routeResult) {\n            middlewareError = routeResult.error;\n            if (_optionalChain([results, 'access', _66 => _66[match.route.id], 'optionalAccess', _67 => _67.result]) == null) {\n              results[match.route.id] = {\n                type: \"error\",\n                result: middlewareError\n              };\n            }\n            break;\n          }\n        }\n      }\n    }\n    if (middlewareError !== void 0) {\n      Array.from(routesParams.values()).forEach(routeId => {\n        if (results[routeId].result instanceof SingleFetchNoResultError) {\n          results[routeId].result = middlewareError;\n        }\n      });\n    }\n  } catch (e) {}\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find(m => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(async handler => handler(async () => {\n    let {\n      data: data2\n    } = await fetchAndDecode(args, basename, [routeId]);\n    return unwrapSingleFetchResult(data2, routeId);\n  }));\n  return {\n    [fetcherMatch.route.id]: result\n  };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename, extension) {\n  let url = typeof reqUrl === \"string\" ? new URL(reqUrl,\n  // This can be called during the SSR flow via PrefetchPageLinksImpl so\n  // don't assume window is available\n  typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = `_root.${extension}`;\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.${extension}`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.${extension}`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let {\n    request\n  } = args;\n  let url = singleFetchUrl(request.url, basename, \"data\");\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\n    return {\n      status: SINGLE_FETCH_REDIRECT_STATUS,\n      data: {\n        redirect: {\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\n        }\n      }\n    };\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = {\n        data: void 0\n      };\n    }\n    return {\n      status: res.status,\n      data: {\n        routes\n      }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = {\n          redirect: typed[SingleFetchRedirectSymbol]\n        };\n      } else {\n        data2 = {\n          routes: typed\n        };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = _optionalChain([targetRoutes, 'optionalAccess', _68 => _68[0]]);\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = {\n          redirect: typed\n        };\n      } else {\n        data2 = {\n          routes: {\n            [routeId]: typed\n          }\n        };\n      }\n    }\n    return {\n      status: res.status,\n      data: data2\n    };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return decode(body, {\n    plugins: [(type, ...rest) => {\n      if (type === \"SanitizedError\") {\n        let [name, message, stack] = rest;\n        let Constructor = Error;\n        if (name && name in global && typeof global[name] === \"function\") {\n          Constructor = global[name];\n        }\n        let error = new Constructor(message);\n        error.stack = stack;\n        return {\n          value: error\n        };\n      }\n      if (type === \"ErrorResponse\") {\n        let [data2, status, statusText] = rest;\n        return {\n          value: new ErrorResponseImpl(status, statusText, data2)\n        };\n      }\n      if (type === \"SingleFetchRedirect\") {\n        return {\n          value: {\n            [SingleFetchRedirectSymbol]: rest[0]\n          }\n        };\n      }\n      if (type === \"SingleFetchClassInstance\") {\n        return {\n          value: rest[0]\n        };\n      }\n      if (type === \"SingleFetchFallback\") {\n        return {\n          value: void 0\n        };\n      }\n    }]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...(revalidate ? {\n          \"X-Remix-Revalidate\": \"yes\"\n        } : null),\n        ...(reload ? {\n          \"X-Remix-Reload-Document\": \"yes\"\n        } : null),\n        ...(replace2 ? {\n          \"X-Remix-Replace\": \"yes\"\n        } : null)\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (routeResult == null) {\n    throw new SingleFetchNoResultError(`No result found for routeId \"${routeId}\"`);\n  } else if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`Invalid response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async val => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n    reject = async error => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/context.ts\n\nvar DataRouterContext = React2.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React2.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar RSCRouterContext = React2.createContext(false);\nfunction useIsRSCRouterContext() {\n  return React2.useContext(RSCRouterContext);\n}\nvar ViewTransitionContext = React2.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React2.createContext(/* @__PURE__ */new Map());\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React2.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React2.createContext(null);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React2.createContext(null);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React2.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React2.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\nvar ENABLE_DEV_WARNINGS = true;\n\n// lib/hooks.tsx\n\nfunction useHref(to, {\n  relative\n} = {}) {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useHref() may be used only in the context of a <Router> component.`);\n  let {\n    basename,\n    navigator\n  } = React3.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\nfunction useInRouterContext() {\n  return React3.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useLocation() may be used only in the context of a <Router> component.`);\n  return React3.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React3.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useMatch() may be used only in the context of a <Router> component.`);\n  let {\n    pathname\n  } = useLocation();\n  return React3.useMemo(() => matchPath(pattern, decodePath(pathname)), [pathname, pattern]);\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React3.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React3.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React3.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useNavigate() may be used only in the context of a <Router> component.`);\n  let dataRouterContext = React3.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React3.useContext(NavigationContext);\n  let {\n    matches\n  } = React3.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React3.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React3.useCallback((to, options = {}) => {\n    warning(activeRef.current, navigateEffectWarning);\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nvar OutletContext = React3.createContext(null);\nfunction useOutletContext() {\n  return React3.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React3.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /* @__PURE__ */React3.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\nfunction useParams() {\n  let {\n    matches\n  } = React3.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, {\n  relative\n} = {}) {\n  let {\n    matches\n  } = React3.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React3.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, unstable_onError, future) {\n  invariant(useInRouterContext(),\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  `useRoutes() may be used only in the context of a <Router> component.`);\n  let {\n    navigator\n  } = React3.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React3.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"), `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`);\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(parentPathnameBase === \"/\" || _optionalChain([parsedLocationArg, 'access', _69 => _69.pathname, 'optionalAccess', _70 => _70.startsWith, 'call', _71 => _71(parentPathnameBase)]), `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`);\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(parentRoute || matches != null, `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `);\n    warning(matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0, `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`);\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, unstable_onError, future);\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */React3.createElement(LocationContext.Provider, {\n      value: {\n        location: {\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\",\n          ...location\n        },\n        navigationType: \"POP\" /* Pop */\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /* @__PURE__ */React3.createElement(React3.Fragment, null, /* @__PURE__ */React3.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */React3.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */React3.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */React3.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */React3.createElement(React3.Fragment, null, /* @__PURE__ */React3.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */React3.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /* @__PURE__ */React3.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */React3.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    if (this.props.unstable_onError) {\n      this.props.unstable_onError(error, errorInfo);\n    } else {\n      console.error(\"React Router caught the following error during render\", error);\n    }\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */React3.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /* @__PURE__ */React3.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n};\nfunction RenderedRoute({\n  routeContext,\n  match,\n  children\n}) {\n  let dataRouterContext = React3.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */React3.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, unstable_onError = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = _optionalChain([dataRouterState, 'optionalAccess', _72 => _72.errors]);\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && _optionalChain([errors, 'optionalAccess', _73 => _73[m.route.id]]) !== void 0);\n    invariant(errorIndex >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(errors).join(\",\")}`);\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors: errors2\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */React3.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */React3.createElement(RenderedRoute, {\n        match,\n        routeContext: {\n          outlet,\n          matches: matches2,\n          isDataRoute: dataRouterState != null\n        },\n        children\n      });\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */React3.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches: matches2,\n        isDataRoute: true\n      },\n      unstable_onError\n    }) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React3.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React3.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React3.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(thisRoute.route.id, `${hookName} can only be used on routes that contain a unique \"id\"`);\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  let revalidate = React3.useCallback(async () => {\n    await dataRouterContext.router.revalidate();\n  }, [dataRouterContext.router]);\n  return React3.useMemo(() => ({\n    revalidate,\n    state: state.revalidation\n  }), [revalidate, state.revalidation]);\n}\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(\"useMatches\" /* UseMatches */);\n  return React3.useMemo(() => matches.map(m => convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React3.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return _optionalChain([state, 'access', _74 => _74.errors, 'optionalAccess', _75 => _75[routeId]]);\n}\nfunction useAsyncValue() {\n  let value = React3.useContext(AwaitContext);\n  return _optionalChain([value, 'optionalAccess', _76 => _76._data]);\n}\nfunction useAsyncError() {\n  let value = React3.useContext(AwaitContext);\n  return _optionalChain([value, 'optionalAccess', _77 => _77._error]);\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React3.useState(\"\");\n  let blockerFunction = React3.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: {\n        ...currentLocation,\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      },\n      nextLocation: {\n        ...nextLocation,\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      },\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n  React3.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React3.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React3.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React3.useCallback(async (to, options = {}) => {\n    warning(activeRef.current, navigateEffectWarning);\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      await router.navigate(to, {\n        fromRouteId: id,\n        ...options\n      });\n    }\n  }, [router, id]);\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\n\n// lib/dom/ssr/components.tsx\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await Promise.resolve().then(() => _interopRequireWildcard(require(/* @vite-ignore */\n    /* webpackIgnore: true */\n    route.module)));\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(`Error loading route module \\`${route.module}\\`, reloading page...`);\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode &&\n    // @ts-expect-error\n    void 0) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {});\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map(match => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [route && route.css ? route.css.map(href => ({\n      rel: \"stylesheet\",\n      href\n    })) : [], _optionalChain([module, 'optionalAccess', _78 => _78.links, 'optionalCall', _79 => _79()]) || []];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map(href => ({\n    rel: \"stylesheet\",\n    href\n  }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(`link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`)) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(matches.map(async match => {\n    let route = manifest.routes[match.route.id];\n    if (route) {\n      let mod = await loadRouteModule(route, routeModules);\n      return mod.links ? mod.links() : [];\n    }\n    return [];\n  }));\n  return dedupeLinkDescriptors(links.flat(1).filter(isHtmlLinkDescriptor).filter(link => link.rel === \"stylesheet\" || link.rel === \"preload\").map(link => link.rel === \"stylesheet\" ? {\n    ...link,\n    rel: \"prefetch\",\n    as: \"style\"\n  } : {\n    ...link,\n    rel: \"prefetch\"\n  }));\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname ||\n      // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      _optionalChain([currentMatches, 'access', _80 => _80[index], 'access', _81 => _81.route, 'access', _82 => _82.path, 'optionalAccess', _83 => _83.endsWith, 'call', _84 => _84(\"*\")]) && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter((match, index) => isNew(match, index) || matchPathChanged(match, index));\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),\n          currentParams: _optionalChain([currentMatches, 'access', _85 => _85[0], 'optionalAccess', _86 => _86.params]) || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, {\n  includeHydrateFallback\n} = {}) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    if (!route) return [];\n    let hrefs = [route.module];\n    if (route.clientActionModule) {\n      hrefs = hrefs.concat(route.clientActionModule);\n    }\n    if (route.clientLoaderModule) {\n      hrefs = hrefs.concat(route.clientLoaderModule);\n    }\n    if (includeHydrateFallback && route.hydrateFallbackModule) {\n      hrefs = hrefs.concat(route.hydrateFallbackModule);\n    }\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({\n        key,\n        link: descriptor\n      });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/dom/ssr/fog-of-war.ts\n\n// lib/dom/ssr/routes.tsx\n\n// lib/dom/ssr/fallback.tsx\n\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */React4.createElement(BoundaryShell, {\n    title: \"Loading...\",\n    renderScripts: true\n  }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */React4.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback \" +\n                \"for more information.\"\n              );\n            `\n    }\n  }) : null);\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach(route => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component3 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */React5.createElement(RemixRootDefaultErrorBoundary, {\n    error: useRouteError()\n  }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...(Component3 ? {\n        element: /* @__PURE__ */React5.createElement(routeModule.Layout, null, /* @__PURE__ */React5.createElement(Component3, null))\n      } : {\n        Component: Component3\n      }),\n      ...(ErrorBoundary ? {\n        errorElement: /* @__PURE__ */React5.createElement(routeModule.Layout, null, /* @__PURE__ */React5.createElement(ErrorBoundary, null))\n      } : {\n        ErrorBoundary\n      }),\n      ...(HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */React5.createElement(routeModule.Layout, null, /* @__PURE__ */React5.createElement(HydrateFallback, null))\n      } : {\n        HydrateFallback\n      })\n    };\n  }\n  return {\n    Component: Component3,\n    ErrorBoundary,\n    HydrateFallback\n  };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({\n  Component: () => null\n})) {\n  return (routesByParentId[parentId] || []).map(route => {\n    let routeModule = routeModules[route.id];\n    invariant2(routeModule, \"No `routeModule` available to create server routes\");\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need middleware/action/shouldRevalidate on these routes since\n      // they're for a static render\n    };\n    let children = createServerRoutes(manifest, routeModules, future, isSpaMode, route.id, routesByParentId, spaModeLazyPromise);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, \"\", groupRoutesByParentId(manifest), needsRevalidation);\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map(route => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(typeof singleFetch === \"function\", \"No single fetch function available for route handler\");\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      Promise.resolve().then(() => _interopRequireWildcard(require(/* @vite-ignore */\n      /* webpackIgnore: true */\n      modulePath)));\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(dataRoute.path, routeModule, route, ssr, needsRevalidation)\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? _optionalChain([initialState, 'optionalAccess', _87 => _87.loaderData, 'optionalAccess', _88 => _88[route.id]]) : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? _optionalChain([initialState, 'optionalAccess', _89 => _89.errors, 'optionalAccess', _90 => _90[route.id]]) : void 0;\n      let isHydrationRequest = needsRevalidation == null && (_optionalChain([routeModule, 'access', _91 => _91.clientLoader, 'optionalAccess', _92 => _92.hydrate]) === true || !route.hasLoader);\n      dataRoute.loader = async ({\n        request,\n        params,\n        context\n      }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(routeModule, \"No `routeModule` available for critical-route loader\");\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(route.id, routeModule.clientLoader, route.hasLoader, isSpaMode);\n      dataRoute.action = ({\n        request,\n        params,\n        context\n      }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(routeModule, \"No `routeModule` available for critical-route action\");\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise(resolve => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(route, routeModulesCache);\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let {\n            clientLoader\n          } = route.clientLoaderModule ? await Promise.resolve().then(() => _interopRequireWildcard(require(/* @vite-ignore */\n          /* webpackIgnore: true */\n          route.clientLoaderModule))) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? Promise.resolve().then(() => _interopRequireWildcard(require(/* @vite-ignore */\n          /* webpackIgnore: true */\n          route.clientActionModule))) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let {\n            clientAction\n          } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let {\n            unstable_clientMiddleware\n          } = route.clientMiddlewareModule ? await Promise.resolve().then(() => _interopRequireWildcard(require(/* @vite-ignore */\n          /* webpackIgnore: true */\n          route.clientMiddlewareModule))) : await getLazyRoute();\n          invariant2(unstable_clientMiddleware, \"No `unstable_clientMiddleware` export found\");\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(dataRoute.path, lazyRoute, route, ssr, needsRevalidation);\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, route.id, routesByParentId, needsRevalidation);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(manifestRoute.id, route.shouldRevalidate, needsRevalidation);\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map(p => p.paramName) : [];\n    const didParamsChange = opts => myParams.some(p => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return opts => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return opts => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return opts => fn({\n      ...opts,\n      defaultShouldRevalidate: true\n    });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return arg => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([prefetchRouteCssPromise, prefetchStyleLinks(route, routeModule)]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(routeDiscovery, ssr) {\n  return routeDiscovery.mode === \"lazy\" && ssr === true;\n}\nfunction getPartialManifest({\n  sri,\n  ...manifest\n}, router) {\n  let routeIds = new Set(router.state.matches.map(m => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach(path => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach(m => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce((acc, id) => Object.assign(acc, {\n    [id]: manifest.routes[id]\n  }), {});\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {\n    return void 0;\n  }\n  return async ({\n    path,\n    patch,\n    signal,\n    fetcherKey\n  }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches([path], fetcherKey ? window.location.href : path, manifest, routeModules, ssr, isSpaMode, basename, routeDiscovery.manifestPath, patch, signal);\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {\n  React6.useEffect(() => {\n    if (!isFogOfWarEnabled(routeDiscovery, ssr) ||\n    // @ts-expect-error - TS doesn't know about this yet\n    _optionalChain([window, 'access', _93 => _93.navigator, 'optionalAccess', _94 => _94.connection, 'optionalAccess', _95 => _95.saveData]) === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter(path => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(lazyPaths, null, manifest, routeModules, ssr, isSpaMode, router.basename, routeDiscovery.manifestPath, router.patchRoutes);\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);\n}\nfunction getManifestPath(_manifestPath, basename) {\n  let manifestPath = _manifestPath || \"/__manifest\";\n  if (basename == null) {\n    return manifestPath;\n  }\n  return `${basename}${manifestPath}`.replace(/\\/+/g, \"/\");\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {\n  const searchParams = new URLSearchParams();\n  paths.sort().forEach(path => searchParams.append(\"p\", path));\n  searchParams.set(\"version\", manifest.version);\n  let url = new URL(getManifestPath(manifestPath, basename), window.location.origin);\n  url.search = searchParams.toString();\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, {\n      signal\n    });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\");\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\"Unable to discover routes due to manifest version mismatch.\");\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      console.warn(\"Detected manifest version mismatch, reloading...\");\n      await new Promise(() => {});\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (_optionalChain([signal, 'optionalAccess', _96 => _96.aborted])) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach(p => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */new Set();\n  Object.values(patches).forEach(patch => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(parentId => patchRoutes(parentId || null, createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)));\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React7.useContext(DataRouterContext);\n  invariant2(context, \"You must render this element inside a <DataRouterContext.Provider> element\");\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React7.useContext(DataRouterStateContext);\n  invariant2(context, \"You must render this element inside a <DataRouterStateContext.Provider> element\");\n  return context;\n}\nvar FrameworkContext = React7.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React7.useContext(FrameworkContext);\n  invariant2(context, \"You must render this element inside a <HydratedRouter> element\");\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React7.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React7.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React7.useState(false);\n  let {\n    onFocus,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart\n  } = theirElementProps;\n  let ref = React7.useRef(null);\n  React7.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = entries => {\n        entries.forEach(entry => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, {\n        threshold: 0.5\n      });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React7.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [shouldPrefetch, ref, {\n    onFocus: composeEventHandlers(onFocus, setIntent),\n    onBlur: composeEventHandlers(onBlur, cancelIntent),\n    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n    onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n  }];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return event => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex(m => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar CRITICAL_CSS_DATA_ATTRIBUTE = \"data-react-router-critical-css\";\nfunction Links({\n  nonce\n}) {\n  let {\n    isSpaMode,\n    manifest,\n    routeModules,\n    criticalCss\n  } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React7.useMemo(() => getKeyedLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */React7.createElement(\"style\", {\n    ...{\n      [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: criticalCss\n    }\n  }) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */React7.createElement(\"link\", {\n    ...{\n      [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\"\n    },\n    rel: \"stylesheet\",\n    href: criticalCss.href,\n    nonce\n  }) : null, keyedLinks.map(({\n    key,\n    link\n  }) => isPageLinkDescriptor(link) ? /* @__PURE__ */React7.createElement(PrefetchPageLinks, {\n    key,\n    nonce,\n    ...link\n  }) : /* @__PURE__ */React7.createElement(\"link\", {\n    key,\n    nonce,\n    ...link\n  })));\n}\nfunction PrefetchPageLinks({\n  page,\n  ...linkProps\n}) {\n  let {\n    router\n  } = useDataRouterContext2();\n  let matches = React7.useMemo(() => matchRoutes(router.routes, page, router.basename), [router.routes, page, router.basename]);\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */React7.createElement(PrefetchPageLinksImpl, {\n    page,\n    matches,\n    ...linkProps\n  });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let {\n    manifest,\n    routeModules\n  } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React7.useState([]);\n  React7.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(links => {\n      if (!interrupted) {\n        setKeyedPrefetchLinks(links);\n      }\n    });\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let {\n    manifest,\n    routeModules\n  } = useFrameworkContext();\n  let {\n    basename\n  } = useDataRouterContext2();\n  let {\n    loaderData,\n    matches\n  } = useDataRouterStateContext();\n  let newMatchesForData = React7.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"data\"), [page, nextMatches, matches, manifest, location]);\n  let newMatchesForAssets = React7.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, \"assets\"), [page, nextMatches, matches, manifest, location]);\n  let dataHrefs = React7.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach(m => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some(m2 => m2.route.id === m.route.id) && m.route.id in loaderData && _optionalChain([routeModules, 'access', _97 => _97[m.route.id], 'optionalAccess', _98 => _98.shouldRevalidate])) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page, basename, \"data\");\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\"_routes\", nextMatches.filter(m => routesParams.has(m.route.id)).map(m => m.route.id).join(\",\"));\n    }\n    return [url.pathname + url.search];\n  }, [basename, loaderData, location, manifest, newMatchesForData, nextMatches, page, routeModules]);\n  let moduleHrefs = React7.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]);\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, dataHrefs.map(href => /* @__PURE__ */React7.createElement(\"link\", {\n    key: href,\n    rel: \"prefetch\",\n    as: \"fetch\",\n    href,\n    ...linkProps\n  })), moduleHrefs.map(href => /* @__PURE__ */React7.createElement(\"link\", {\n    key: href,\n    rel: \"modulepreload\",\n    href,\n    ...linkProps\n  })), keyedPrefetchLinks.map(({\n    key,\n    link\n  }) =>\n  // these don't spread `linkProps` because they are full link descriptors\n  // already with their own props\n  /* @__PURE__ */\n  React7.createElement(\"link\", {\n    key,\n    nonce: linkProps.nonce,\n    ...link\n  })));\n}\nfunction Meta() {\n  let {\n    isSpaMode,\n    routeModules\n  } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      loaderData: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (_optionalChain([routeModule, 'optionalAccess', _99 => _99.meta])) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        loaderData: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\");\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */React7.createElement(React7.Fragment, null, meta.flat().map(metaProps => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let {\n        tagName,\n        ...rest\n      } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`);\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */React7.createElement(Comp, {\n        key: JSON.stringify(rest),\n        ...rest\n      });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */React7.createElement(\"title\", {\n        key: \"title\"\n      }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      _nullishCoalesce(metaProps.charSet, () => metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */React7.createElement(\"meta\", {\n        key: \"charSet\",\n        charSet: metaProps.charSet\n      }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */React7.createElement(\"script\", {\n          key: `script:ld+json:${json}`,\n          type: \"application/ld+json\",\n          dangerouslySetInnerHTML: {\n            __html: json\n          }\n        });\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */React7.createElement(\"meta\", {\n      key: JSON.stringify(metaProps),\n      ...metaProps\n    });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction setIsHydrated() {\n  isHydrated = true;\n}\nfunction Scripts(scriptProps) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    renderMeta,\n    routeDiscovery,\n    ssr\n  } = useFrameworkContext();\n  let {\n    router,\n    static: isStatic,\n    staticContext\n  } = useDataRouterContext2();\n  let {\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let isRSCRouterContext = useIsRSCRouterContext();\n  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React7.useEffect(() => {\n    setIsHydrated();\n  }, []);\n  let initialScripts = React7.useMemo(() => {\n    if (isRSCRouterContext) {\n      return null;\n    }\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${_optionalChain([manifest, 'access', _100 => _100.hmr, 'optionalAccess', _101 => _101.runtime]) ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [...(clientActionModule ? [{\n        module: clientActionModule,\n        varName: `${routeVarName}_clientAction`\n      }] : []), ...(clientLoaderModule ? [{\n        module: clientLoaderModule,\n        varName: `${routeVarName}_clientLoader`\n      }] : []), ...(clientMiddlewareModule ? [{\n        module: clientMiddlewareModule,\n        varName: `${routeVarName}_clientMiddleware`\n      }] : []), ...(hydrateFallbackModule ? [{\n        module: hydrateFallbackModule,\n        varName: `${routeVarName}_HydrateFallback`\n      }] : []), {\n        module,\n        varName: `${routeVarName}_main`\n      }];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map(chunk => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map(chunk => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ?\n    // Inline a minimal manifest with the SSR matches\n    `window.__reactRouterManifest = ${JSON.stringify(getPartialManifest(manifest, router), null, 2)};` : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */React7.createElement(React7.Fragment, null, /* @__PURE__ */React7.createElement(\"script\", {\n      ...scriptProps,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript),\n      type: void 0\n    }), /* @__PURE__ */React7.createElement(\"script\", {\n      ...scriptProps,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\",\n      async: true\n    }));\n  }, []);\n  let preloads = isHydrated || isRSCRouterContext ? [] : dedupe(manifest.entry.imports.concat(getModuleLinkHrefs(matches, manifest, {\n    includeHydrateFallback: true\n  })));\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  warnOnce(!isRSCRouterContext, \"The <Scripts /> element is a no-op when using RSC and can be safely removed.\");\n  return isHydrated || isRSCRouterContext ? null : /* @__PURE__ */React7.createElement(React7.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */React7.createElement(\"script\", {\n    \"rr-importmap\": \"\",\n    type: \"importmap\",\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: JSON.stringify({\n        integrity: sri\n      })\n    }\n  }) : null, !enableFogOfWar ? /* @__PURE__ */React7.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.url,\n    crossOrigin: scriptProps.crossOrigin,\n    integrity: sri[manifest.url],\n    suppressHydrationWarning: true\n  }) : null, /* @__PURE__ */React7.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.entry.module,\n    crossOrigin: scriptProps.crossOrigin,\n    integrity: sri[manifest.entry.module],\n    suppressHydrationWarning: true\n  }), preloads.map(path => /* @__PURE__ */React7.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: scriptProps.crossOrigin,\n    integrity: sri[path],\n    suppressHydrationWarning: true\n  })), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar RemixErrorBoundary = class extends React8.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.error || null,\n      location: props.location\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return {\n        error: props.error || null,\n        location: props.location\n      };\n    }\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */React8.createElement(RemixRootDefaultErrorBoundary, {\n        error: this.state.error,\n        isOutsideRemixApp: true\n      });\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */React8.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information.\"\n        );\n      `\n    }\n  });\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */React8.createElement(BoundaryShell, {\n      title: \"Unhandled Thrown Response!\"\n    }, /* @__PURE__ */React8.createElement(\"h1\", {\n      style: {\n        fontSize: \"24px\"\n      }\n    }, error.status, \" \", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */React8.createElement(BoundaryShell, {\n    title: \"Application Error!\",\n    isOutsideRemixApp\n  }, /* @__PURE__ */React8.createElement(\"h1\", {\n    style: {\n      fontSize: \"24px\"\n    }\n  }, \"Application Error\"), /* @__PURE__ */React8.createElement(\"pre\", {\n    style: {\n      padding: \"2rem\",\n      background: \"hsla(10, 50%, 50%, 0.1)\",\n      color: \"red\",\n      overflow: \"auto\"\n    }\n  }, errorInstance.stack), heyDeveloper);\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let {\n    routeModules\n  } = useFrameworkContext();\n  if (_optionalChain([routeModules, 'access', _102 => _102.root, 'optionalAccess', _103 => _103.Layout]) && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */React8.createElement(\"html\", {\n    lang: \"en\"\n  }, /* @__PURE__ */React8.createElement(\"head\", null, /* @__PURE__ */React8.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /* @__PURE__ */React8.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n  }), /* @__PURE__ */React8.createElement(\"title\", null, title)), /* @__PURE__ */React8.createElement(\"body\", null, /* @__PURE__ */React8.createElement(\"main\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, children, renderScripts ? /* @__PURE__ */React8.createElement(Scripts, null) : null)));\n}\nexports.Action = Action;\nexports.createMemoryHistory = createMemoryHistory;\nexports.createBrowserHistory = createBrowserHistory;\nexports.createHashHistory = createHashHistory;\nexports.invariant = invariant;\nexports.warning = warning;\nexports.createPath = createPath;\nexports.parsePath = parsePath;\nexports.unstable_createContext = unstable_createContext;\nexports.unstable_RouterContextProvider = unstable_RouterContextProvider;\nexports.convertRoutesToDataRoutes = convertRoutesToDataRoutes;\nexports.matchRoutes = matchRoutes;\nexports.generatePath = generatePath;\nexports.matchPath = matchPath;\nexports.stripBasename = stripBasename;\nexports.resolvePath = resolvePath;\nexports.getResolveToMatches = getResolveToMatches;\nexports.resolveTo = resolveTo;\nexports.joinPaths = joinPaths;\nexports.data = data;\nexports.redirect = redirect;\nexports.redirectDocument = redirectDocument;\nexports.replace = replace;\nexports.ErrorResponseImpl = ErrorResponseImpl;\nexports.isRouteErrorResponse = isRouteErrorResponse;\nexports.encode = encode;\nexports.IDLE_NAVIGATION = IDLE_NAVIGATION;\nexports.IDLE_FETCHER = IDLE_FETCHER;\nexports.IDLE_BLOCKER = IDLE_BLOCKER;\nexports.createRouter = createRouter;\nexports.createStaticHandler = createStaticHandler;\nexports.getStaticContextFromError = getStaticContextFromError;\nexports.isDataWithResponseInit = isDataWithResponseInit;\nexports.isResponse = isResponse;\nexports.isRedirectStatusCode = isRedirectStatusCode;\nexports.isRedirectResponse = isRedirectResponse;\nexports.isMutationMethod = isMutationMethod;\nexports.createRequestInit = createRequestInit;\nexports.SingleFetchRedirectSymbol = SingleFetchRedirectSymbol;\nexports.SINGLE_FETCH_REDIRECT_STATUS = SINGLE_FETCH_REDIRECT_STATUS;\nexports.NO_BODY_STATUS_CODES = NO_BODY_STATUS_CODES;\nexports.StreamTransfer = StreamTransfer;\nexports.getTurboStreamSingleFetchDataStrategy = getTurboStreamSingleFetchDataStrategy;\nexports.getSingleFetchDataStrategyImpl = getSingleFetchDataStrategyImpl;\nexports.stripIndexParam = stripIndexParam;\nexports.singleFetchUrl = singleFetchUrl;\nexports.decodeViaTurboStream = decodeViaTurboStream;\nexports.DataRouterContext = DataRouterContext;\nexports.DataRouterStateContext = DataRouterStateContext;\nexports.RSCRouterContext = RSCRouterContext;\nexports.ViewTransitionContext = ViewTransitionContext;\nexports.FetchersContext = FetchersContext;\nexports.AwaitContext = AwaitContext;\nexports.NavigationContext = NavigationContext;\nexports.LocationContext = LocationContext;\nexports.RouteContext = RouteContext;\nexports.ENABLE_DEV_WARNINGS = ENABLE_DEV_WARNINGS;\nexports.warnOnce = warnOnce;\nexports.useHref = useHref;\nexports.useInRouterContext = useInRouterContext;\nexports.useLocation = useLocation;\nexports.useNavigationType = useNavigationType;\nexports.useMatch = useMatch;\nexports.useNavigate = useNavigate;\nexports.useOutletContext = useOutletContext;\nexports.useOutlet = useOutlet;\nexports.useParams = useParams;\nexports.useResolvedPath = useResolvedPath;\nexports.useRoutes = useRoutes;\nexports.useRoutesImpl = useRoutesImpl;\nexports._renderMatches = _renderMatches;\nexports.useRouteId = useRouteId;\nexports.useNavigation = useNavigation;\nexports.useRevalidator = useRevalidator;\nexports.useMatches = useMatches;\nexports.useLoaderData = useLoaderData;\nexports.useRouteLoaderData = useRouteLoaderData;\nexports.useActionData = useActionData;\nexports.useRouteError = useRouteError;\nexports.useAsyncValue = useAsyncValue;\nexports.useAsyncError = useAsyncError;\nexports.useBlocker = useBlocker;\nexports.RemixErrorBoundary = RemixErrorBoundary;\nexports.createServerRoutes = createServerRoutes;\nexports.createClientRoutesWithHMRRevalidationOptOut = createClientRoutesWithHMRRevalidationOptOut;\nexports.noActionDefinedError = noActionDefinedError;\nexports.createClientRoutes = createClientRoutes;\nexports.shouldHydrateRouteLoader = shouldHydrateRouteLoader;\nexports.getPatchRoutesOnNavigationFunction = getPatchRoutesOnNavigationFunction;\nexports.useFogOFWarDiscovery = useFogOFWarDiscovery;\nexports.getManifestPath = getManifestPath;\nexports.FrameworkContext = FrameworkContext;\nexports.usePrefetchBehavior = usePrefetchBehavior;\nexports.CRITICAL_CSS_DATA_ATTRIBUTE = CRITICAL_CSS_DATA_ATTRIBUTE;\nexports.Links = Links;\nexports.PrefetchPageLinks = PrefetchPageLinks;\nexports.Meta = Meta;\nexports.setIsHydrated = setIsHydrated;\nexports.Scripts = Scripts;\nexports.mergeRefs = mergeRefs;","map":{"version":3,"names":["Object","defineProperty","exports","value","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","default","_nullishCoalesce","lhs","rhsFn","_optionalChain","ops","lastAccessLHS","undefined","i","length","op","fn","args","__typeError","msg","TypeError","__accessCheck","member","has","__privateGet","getter","get","__privateAdd","WeakSet","add","set","Action","Action2","PopStateEventType","createMemoryHistory","options","initialEntries","initialIndex","v5Compat","entries","map","entry","index2","createMemoryLocation","state","index","clampIndex","action","listener","n","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","history","createURL","URL","encodeLocation","path","parsePath","search","hash","push","nextLocation","splice","delta","replace","go","nextIndex","listen","createBrowserHistory","createBrowserLocation","window2","globalHistory","usr","createBrowserHref","getUrlBasedHistory","createHashHistory","createHashLocation","substring","startsWith","createHashHref","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","validateHashLocation","invariant","message","Error","cond","console","warn","e","createKey","random","toString","getHistoryState","idx","current","parsedPath","searchIndex","getLocation","validateLocation","window","defaultView","getIndex","replaceState","handlePop","historyState","pushState","error","DOMException","name","assign","replace2","createBrowserURLImpl","addEventListener","removeEventListener","isAbsolute","origin","unstable_createContext","defaultValue","_map","unstable_RouterContextProvider","constructor","init","Map","context","WeakMap","unsupportedLazyRouteObjectKeys","Set","isUnsupportedLazyRouteObjectKey","unsupportedLazyRouteFunctionKeys","isUnsupportedLazyRouteFunctionKey","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","allowInPlaceMutations","treePath","String","id","join","children","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","convertRouteMatchToUiMatch","match","loaderData","params","data","handle","parentsMeta","_hasParentOptionalSegments","flattenRoute","hasParentOptionalSegments","relativePath","meta","caseSensitive","childrenIndex","joinPaths","routesMeta","concat","score","computeScore","forEach","_2","_3","includes","_4","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","pathnameBase","normalizePathname","generatePath","originalPath","prefix","stringify2","p","array","isLastSegment","star","keyMatch","optional","param","encodeURIComponent","pattern","matcher","compiledParams","compilePath","captureGroups","memo","paramName","splatValue","regexpSource","_","RegExp","v","decodeURIComponent","toLowerCase","startIndex","nextChar","prependBasename","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","DataWithResponseInit","data2","type","status","redirect","responseInit","headers","Headers","Response","redirectDocument","response","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","json","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","isAbsoluteUrl","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","ResetLoaderDataSymbol","Symbol","createRouter","routerWindow","isBrowser","createElement","hydrationRouteProperties","dataRoutes","inFlightDataRoutes","dataStrategyImpl","dataStrategy","defaultDataStrategyWithMiddleware","future","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialMatchesIsFOW","initialErrors","initialized","patchRoutesOnNavigation","getInternalRouterError","getShortCircuitMatches","fogOfWar","checkFogOfWar","active","m","lazy","loader","errors","findIndex","shouldLoadRouteOnHydration","router","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","fetchers","blockers","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","fetchersQueuedForDeletion","blockerFunctions","unblockBlockerHistoryUpdate","pendingRevalidationDfd","initialize","size","blockerKey","shouldBlockNavigation","currentLocation","nextHistoryUpdatePromise","Promise","resolve","updateBlocker","then","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","initialHydration","dispose","clear","abort","deleteFetcher","deleteBlocker","subscribe","delete","newState","opts","matchRoute","element","errorElement","hydrateFallbackElement","unmountedFetchers","mountedFetchers","fetcher","subscriber","deletedFetchers","viewTransitionOpts","flushSync","completeNavigation","isActionReload","isMutationMethod","_5","_6","_isRedirect","keys","mergeLoaderData","k","getSavedScrollPosition","_7","_8","priorPaths","toPaths","_9","_10","navigate","normalizedPath","normalizeTo","_11","fromRouteId","_12","relative","submission","normalizeNavigateOptions","userReplace","pendingError","enableViewTransition","viewTransition","revalidate","createDeferred","interruptActiveLoads","promise","startUninterruptedRevalidation","overrideNavigation","saveScrollPosition","routesToUse","loadingNavigation","_13","isHashChangeOnly","notFoundMatches","handleNavigational404","AbortController","request","createClientSideRequest","signal","scopedContext","unstable_getContext","pendingActionResult","findNearestBoundary","actionResult","handleAction","shortCircuited","routeId","isErrorResult","getLoadingNavigation","updatedMatches","handleLoaders","fetcherSubmission","getActionDataForCommit","isFogOfWar","getSubmittingNavigation","discoverResult","discoverRoutes","partialMatches","matches2","boundaryId","actionMatch","getTargetMatch","method","dsMatches","getTargetedDataStrategyMatches","results","callDataStrategy","aborted","isRedirectResult","location2","normalizeRedirectLocation","startRedirectNavigation","boundaryMatch","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","revalidatingFetchers","getMatchesToLoad","shouldLoad","unstable_middleware","updatedFetchers2","markFetchRedirectsDone","updates","getUpdatedRevalidatingFetchers","rf","abortFetcher","controller","abortPendingFetchRevalidations","f","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect2","findRedirect","processLoaderData","updatedFetchers","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","revalidatingFetcher","getLoadingFetcher","fetch2","_14","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","fetchMatches","actionResults","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","existingFetcher2","r","doneFetcher","isNavigation","redirectLocation","isDocumentReload","redirectNavigationType","fetcherKey","dataResults","callDataStrategyImpl","isRedirectDataStrategyResult","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","loaderResultsPromise","fetcherResultsPromise","all","acc","getFetcher","queueFetcherForDeletion","count","markFetchersDone","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","Array","blockerFunction","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","fogMatches","isNonHMR","localManifest","patch","patchRoutesImpl","newMatches","newPartialMatches","_internalSetRoutes","newRoutes","patchRoutes","unstable_allowElementMutations","fetch","_internalFetchControllers","_internalSetStateDoNotUseOrYouWillBreakYourApp","createStaticHandler","_15","query","requestContext","filterMatchesToLoad","skipLoaderErrorBubbling","skipRevalidation","unstable_generateMiddlewareResponse","generateMiddlewareResponse","isValidMethod","methodNotAllowedMatches","staticContext","statusCode","loaderHeaders","actionHeaders","loadLazyMiddlewareForMatches","renderedStaticContext","runServerMiddlewarePipeline","res","opts2","result2","queryImpl","isResponse","isRedirectResponse","parseResponseBody","isDataWithResponseInit","dataWithResponseInitToErrorResponse","getStaticContextFromError","boundaryRouteId","_16","find","_17","_18","_19","queryRoute","innerRequest","processed","handleQueryResult","dataWithResponseInitToResponse","values","routeMatch","submit","loadRouteData","isDataStrategyResult","isRouteRequest","throwStaticHandlerAbortedError","Location","loaderRequest","Request","handlerContext2","handlerContext","_20","_21","_22","_23","_24","_25","maxIdx","getDataStrategyMatch","processRouteLoaderData","defaultDataStrategy","errorBoundaryId","_deepestRenderedBoundaryId","reason","isSubmissionNavigation","body","contextualMatches","activeRouteMatch","nakedIndex","hasNakedIndexQuery","URLSearchParams","indexValues","getAll","append","qs","isFetcher","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","parse","searchParams","convertFormDataToSearchParams","convertSearchParamsToFormData","lazyRoutePropertiesToSkip","hasPatchRoutesOnNavigation","currentUrl","nextUrl","actionStatus","shouldSkipRevalidation","baseShouldRevalidateArgs","currentParams","_26","_27","_28","nextParams","forceShouldLoad","isNewLoader","defaultShouldRevalidate","isNewRouteInstance","shouldRevalidateArgs","shouldRevalidateLoader","isMidInitialLoad","fetcherMatches","fetcherMatch","fetchController","fetcherDsMatches","hasData","hasError","hydrate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","allowElementMutations","childrenToPatch","uniqueChildren","existingChildren","newRoute","existingRoute","existingRoute2","isSameRoute","_29","existingRouteTyped","newRouteTyped","aChild","_30","_31","_32","bChild","lazyRoutePropertyCache","loadLazyRouteProperty","routeToUpdate","lazyFn","cache","cachedPromise","propertyPromise","isUnsupported","staticRouteValue","isStaticallyDefined","lazyRouteFunctionCache","loadLazyRoute","lazyRoutePromise","lazyHandlerPromise","lazyRoutePromise2","lazyRoute","routeUpdates","lazyRouteProperty","lazyValue","catch","lazyKeys","lazyPropertyPromises","_33","_34","_35","_36","isNonNullable","promises","matchesToLoad","keyedResults","runClientMiddlewarePipeline","handler","errorHandler","runMiddlewarePipeline","processResult","isDataStrategyResults","nextResult","maxBoundaryIdx","unstable_shouldCallHandler","isResult","tuples","flatMap","callRouteMiddleware","middlewares","tuple","middleware","next","getDataStrategyMatchLazyPromises","lazyMiddlewarePromise","lazyRoutePromises","unstable_shouldRevalidateArgs","isUsingNewApi","_lazyPromises","handlerOverride","callLoaderOrAction","_37","_38","targetMatch","isStaticHandler","_39","_40","_41","_42","dataStrategyArgs","unstable_runClientMiddleware","cb","typedDataStrategyArgs","_43","_44","_45","_46","onReject","isAction","runHandler","reject","abortPromise","actualHandler","ctx","handlerPromise","val","race","handlerError","handler2","contentType","dataStrategyResult","_47","_48","_49","_50","_51","_52","_53","_54","_55","_56","_57","_58","trimmedMatches","normalizedLocation","protocol","isSameBasename","foundError","_59","_60","newLoaderData","mergedLoaderData","merged","eligibleMatches","reverse","errorMessage","_61","_62","_63","_64","isRedirectStatusCode","_window","transitions","sessionPositions","sessionStorage","getItem","isArray","setItem","rej","_react","require","React","React2","React3","React8","React7","React6","React5","React4","HOLE","NAN","NEGATIVE_INFINITY","NEGATIVE_ZERO","NULL","POSITIVE_INFINITY","UNDEFINED","TYPE_BIGINT","TYPE_DATE","TYPE_ERROR","TYPE_MAP","TYPE_NULL_OBJECT","TYPE_PROMISE","TYPE_REGEXP","TYPE_SET","TYPE_SYMBOL","TYPE_URL","TYPE_PREVIOUS_RESOLVED","Deferred","createLineSplittingTransform","decoder","TextDecoder","leftover","TransformStream","transform","chunk","str","decode","stream","parts","part","enqueue","flush","flatten","input","indices","existing","Number","isNaN","deferred","plugins","postPlugins","stringified","stack","input2","partsForObj","keyFor","pluginHandled","plugin","pluginResult","pluginIdentifier","Date","dateTime","getTime","source","flags","getPrototypeOf","isPlainObject","objectProtoNames","getOwnPropertyNames","thing","proto","globalObj","globalThis","unflatten","parsed","hydrated","SyntaxError","postRun","NaN","Infinity","c","BigInt","for","newSet","create","d","errorType","vals","v2","object","readable","done","reader","pipeThrough","getReader","decodeInitial","donePromise","decodeDeferred","closed","read","line","colonIndex","deferredId","lineData","jsonLine","encode","encoder","textEncoder","TextEncoder","lastSentIndex","ReadableStream","start","seenPromises","raceDone","racePromise","rejectPromise","event","resolved","id2","finally","close","createRequestInit","ESCAPE_LOOKUP","ESCAPE_REGEX","escapeHtml","html","createHtml","__html","invariant2","SingleFetchRedirectSymbol","SingleFetchNoResultError","SINGLE_FETCH_REDIRECT_STATUS","NO_BODY_STATUS_CODES","StreamTransfer","identifier","textDecoder","nonce","renderMeta","didRenderScripts","streamCache","scriptTag","dangerouslySetInnerHTML","Fragment","Suspense","getTurboStreamSingleFetchDataStrategy","getRouter","routeModules","ssr","getSingleFetchDataStrategyImpl","manifestRoute","routeModule","hasLoader","hasClientLoader","hasShouldRevalidate","_65","fetchAndDecodeViaTurboStream","getRouteInfo","fetchAndDecode","shouldAllowOptOut","singleFetchActionStrategy","foundRevalidatingServerLoader","nonSsrStrategy","singleFetchLoaderFetcherStrategy","singleFetchLoaderNavigationStrategy","unwrapSingleFetchResult","routesParams","foundOptOutRoute","routeDfds","createDeferred2","singleFetchDfd","resolvePromise","shouldCall","isInitialLoad","__reactRouterHdrActive","targetRoutes","bubbleMiddlewareErrors","singleFetchPromise","middlewareError","fetchedData","routeResult","_66","_67","stripIndexParam","indexValuesToKeep","indexValue","toKeep","singleFetchUrl","reqUrl","extension","reload","decodeViaTurboStream","typed","_68","global","Constructor","DataRouterContext","createContext","displayName","DataRouterStateContext","RSCRouterContext","useIsRSCRouterContext","useContext","ViewTransitionContext","isTransitioning","FetchersContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","ENABLE_DEV_WARNINGS","useHref","useInRouterContext","navigator","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useMemo","navigateEffectWarning","useIsomorphicLayoutEffect","isStatic","static","useLayoutEffect","useNavigate","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","activeRef","useRef","useCallback","OutletContext","useOutletContext","useOutlet","Provider","useParams","useRoutes","useRoutesImpl","dataRouterState","unstable_onError","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","_69","_70","_71","parentSegments","Component","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","style","fontStyle","defaultErrorElement","RenderErrorBoundary","props","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","component","RenderedRoute","ErrorBoundary","_72","errorIndex","_73","renderFallback","fallbackIndex","HydrateFallback","errors2","needsToRunLoader","reduceRight","shouldRenderHydrateFallback","getChildren","getDataRouterConsoleError","hookName","useDataRouterContext","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","useNavigation","useRevalidator","useMatches","useLoaderData","useRouteLoaderData","useActionData","_74","_75","useAsyncValue","_76","_data","useAsyncError","_77","_error","blockerId","useBlocker","shouldBlock","setBlockerKey","useState","useEffect","alreadyWarned","loadRouteModule","routeModulesCache","module","__reactRouterContext","isSpaMode","getKeyedLinksForMatches","descriptors","css","rel","_78","links","_79","flat","preloads","getModuleLinkHrefs","dedupeLinkDescriptors","getRouteCssDescriptors","prefetchRouteCss","prefetchStyleLink","prefetchStyleLinks","isPreloadSupported","styleLinks","descriptor","isPageLinkDescriptor","as","media","matchMedia","link","removeLink","head","contains","removeChild","onload","onerror","appendChild","page","isHtmlLinkDescriptor","imageSrcSet","imageSizes","getKeyedPrefetchLinks","mod","getNewMatchesForLinks","nextMatches","currentMatches","mode","matchPathChanged","_80","_81","_82","_83","_84","_85","_86","includeHydrateFallback","dedupeHrefs","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","sortKeys","sorted","preloadsSet","deduped","alreadyModulePreload","_isPreloadSupported","el","relList","supports","alreadyWarned2","warnOnce","condition","RemixRootDefaultHydrateFallback","BoundaryShell","title","renderScripts","groupRoutesByParentId","parentId","getRouteComponents","Component3","getRouteModuleComponent","RemixRootDefaultErrorBoundary","Layout","createServerRoutes","routesByParentId","spaModeLazyPromise","dataRoute","createClientRoutesWithHMRRevalidationOptOut","needsRevalidation","initialState","createClientRoutes","preventInvalidServerHandlerCall","hasAction","noActionDefinedError","article","fetchServerHandler","singleFetch","fetchServerLoader","fetchServerAction","prefetchModule","modulePath","prefetchRouteModuleChunks","route2","prefetchStylesAndCallHandler","cachedModule","linkPrefetchPromise","unstable_clientMiddleware","getShouldRevalidateFunction","hasInitialData","initialData","_87","_88","hasInitialError","initialError","_89","_90","isHydrationRequest","_91","clientLoader","_92","serverLoader","shouldHydrateRouteLoader","clientAction","serverAction","hasClientAction","getLazyRoute","setTimeout","routeModulePromise","loadRouteModuleWithBlockingLinks","clientActionPromise","hasClientMiddleware","clientMiddlewareModule","wrapShouldRevalidateForHdr","myParams","didParamsChange","routeShouldRevalidate","handledRevalidation","prefetchRouteCssPromise","isEmptyObject","nextPaths","discoveredPathsMaxSize","discoveredPaths","URL_LIMIT","isFogOfWarEnabled","routeDiscovery","getPartialManifest","sri","routeIds","initialRoutes","getPatchRoutesOnNavigationFunction","fetchAndApplyManifestPatches","manifestPath","useFogOFWarDiscovery","_93","_94","connection","_95","saveData","registerElement","tagName","fetchPatches","querySelectorAll","lazyPaths","debouncedFetchPatches","debounce","observer","MutationObserver","observe","documentElement","subtree","childList","attributes","attributeFilter","disconnect","getManifestPath","_manifestPath","MANIFEST_VERSION_STORAGE_KEY","errorReloadPath","version","serverPatches","ok","removeItem","_96","knownRoutes","patches","addToFifoQueue","parentIds","queue","callback","wait","timeoutId","clearTimeout","useDataRouterContext2","useDataRouterStateContext","FrameworkContext","useFrameworkContext","usePrefetchBehavior","prefetch","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","shouldPrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","ref","isIntersecting","IntersectionObserver","threshold","setIntent","cancelIntent","composeEventHandlers","theirHandler","ourHandler","defaultPrevented","getActiveMatches","isHydrated","errorIdx","CRITICAL_CSS_DATA_ATTRIBUTE","Links","criticalCss","routerMatches","keyedLinks","PrefetchPageLinks","linkProps","PrefetchPageLinksImpl","useKeyedPrefetchLinks","keyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","newMatchesForData","newMatchesForAssets","dataHrefs","m2","_97","_98","moduleHrefs","Meta","_matches","leafMeta","_match","routeMeta","_99","metaProps","isValidMetaTag","Comp","charSet","charset","err","setIsHydrated","Scripts","scriptProps","serverHandoffString","isRSCRouterContext","enableFogOfWar","initialScripts","streamScript","contextScript","routeModulesScript","_100","hmr","_101","runtime","routeIndex","routeVarName","manifestEntry","chunks","varName","chunkImportsSnippet","mergedChunksSnippet","suppressHydrationWarning","async","dedupe","integrity","crossOrigin","mergeRefs","refs","RemixErrorBoundary","isOutsideRemixApp","heyDeveloper","fontSize","errorInstance","errorString","background","color","overflow","_102","root","_103","lang","content","fontFamily"],"sources":["/Users/sagiav/Documents/Prof Stuff/Github-Hackathon/Constellate/house-finder-web/node_modules/react-router/dist/development/chunk-ZO66TDGB.js"],"sourcesContent":["\"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }/**\n * react-router v7.8.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */ ((Action2) => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries;\n  entries = initialEntries.map(\n    (entry, index2) => createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index2 === 0 ? \"default\" : void 0\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    return createBrowserURLImpl(to);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\nfunction createBrowserURLImpl(to, isAbsolute = false) {\n  let base = \"http://localhost\";\n  if (typeof window !== \"undefined\") {\n    base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n  }\n  invariant(base, \"No window.location.(origin|href) available to create URL\");\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  if (!isAbsolute && href.startsWith(\"//\")) {\n    href = base + href;\n  }\n  return new URL(href, base);\n}\n\n// lib/router/utils.ts\nfunction unstable_createContext(defaultValue) {\n  return { defaultValue };\n}\nvar _map;\nvar unstable_RouterContextProvider = class {\n  /**\n   * Create a new `unstable_RouterContextProvider` instance\n   * @param init An optional initial context map to populate the provider with\n   */\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  /**\n   * Access a value from the context. If no value has been set for the context,\n   * it will return the context's `defaultValue` if provided, or throw an error\n   * if no `defaultValue` was set.\n   * @param context The context to get the value for\n   * @returns The value for the context, or the context's `defaultValue` if no\n   * value was set\n   */\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  /**\n   * Set a value for the context. If the context already has a value set, this\n   * will overwrite it.\n   *\n   * @param context The context to set the value for\n   * @param value The value to set for the context\n   * @returns {void}\n   */\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(\n    key\n  );\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"unstable_middleware\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(\n    key\n  );\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath = [], manifest = {}, allowInPlaceMutations = false) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      allowInPlaceMutations || !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest,\n          allowInPlaceMutations\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    loaderData: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\", _hasParentOptionalSegments = false) {\n  let flattenRoute = (route, index, hasParentOptionalSegments = _hasParentOptionalSegments, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      if (!meta.relativePath.startsWith(parentPath) && hasParentOptionalSegments) {\n        return;\n      }\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(\n        route.children,\n        branches,\n        routesMeta,\n        path,\n        hasParentOptionalSegments\n      );\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !_optionalChain([route, 'access', _2 => _2.path, 'optionalAccess', _3 => _3.includes, 'call', _4 => _4(\"?\")])) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, true, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify2 = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify2(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return encodeURIComponent(stringify2(param));\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = void 0;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  ).replace(/\\/([\\w-]+)\\?(\\/|$)/g, \"(/$1)?$2\");\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction prependBasename({\n  basename,\n  pathname\n}) {\n  return pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let hydrationRouteProperties = init.hydrationRouteProperties || [];\n  let mapRouteProperties = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  if (!basename.startsWith(\"/\")) {\n    basename = `/${basename}`;\n  }\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions = null;\n  let getScrollRestorationKey = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  let initialized;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialized = true;\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  } else {\n    if (initialMatches && !init.hydrationData) {\n      let fogOfWar = checkFogOfWar(\n        initialMatches,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active) {\n        initialMatches = null;\n      }\n    }\n    if (!initialMatches) {\n      initialized = false;\n      initialMatches = [];\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    } else if (initialMatches.some((m) => m.route.lazy)) {\n      initialized = false;\n    } else if (!initialMatches.some((m) => m.route.loader)) {\n      initialized = true;\n    } else {\n      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n      let errors = init.hydrationData ? init.hydrationData.errors : null;\n      if (errors) {\n        let idx = initialMatches.findIndex(\n          (m) => errors[m.route.id] !== void 0\n        );\n        initialized = initialMatches.slice(0, idx + 1).every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      } else {\n        initialized = initialMatches.every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      }\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    if (newState.matches) {\n      newState.matches = newState.matches.map((m) => {\n        let route = manifest[m.route.id];\n        let matchRoute = m.route;\n        if (matchRoute.element !== route.element || matchRoute.errorElement !== route.errorElement || matchRoute.hydrateFallbackElement !== route.hydrateFallbackElement) {\n          return {\n            ...m,\n            route\n          };\n        }\n        return m;\n      });\n    }\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && _optionalChain([location, 'access', _5 => _5.state, 'optionalAccess', _6 => _6._isRedirect]) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let restoreScrollPosition = isUninterruptedRevalidation ? false : getSavedScrollPosition(location, newState.matches || state.matches);\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && _optionalChain([location, 'access', _7 => _7.state, 'optionalAccess', _8 => _8._isRedirect]) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition,\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    _optionalChain([pendingRevalidationDfd, 'optionalAccess', _9 => _9.resolve, 'call', _10 => _10()]);\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      _optionalChain([opts, 'optionalAccess', _11 => _11.fromRouteId]),\n      _optionalChain([opts, 'optionalAccess', _12 => _12.relative])\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = _optionalChain([opts, 'optionalAccess', _13 => _13.initialHydration]) && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        opts && opts.initialHydration === true,\n        { replace: opts.replace, flushSync }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        if (discoverResult.partialMatches.length === 0) {\n          let { matches: matches2, route } = getShortCircuitMatches(dataRoutes);\n          return {\n            matches: matches2,\n            pendingActionResult: [\n              route.id,\n              {\n                type: \"error\" /* error */,\n                error: discoverResult.error\n              }\n            ]\n          };\n        }\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        initialHydration ? [] : hydrationRouteProperties,\n        scopedContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        scopedContext,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [\n          boundaryMatch.route.id,\n          result,\n          actionMatch.route.id\n        ]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        if (discoverResult.partialMatches.length === 0) {\n          let { matches: matches2, route } = getShortCircuitMatches(dataRoutes);\n          return {\n            matches: matches2,\n            loaderData: {},\n            errors: {\n              [route.id]: discoverResult.error\n            }\n          };\n        }\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      request,\n      scopedContext,\n      mapRouteProperties,\n      manifest,\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration ? [] : hydrationRouteProperties,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && !dsMatches.some((m) => m.route.unstable_middleware) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      request,\n      scopedContext\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href,\n      routeId,\n      _optionalChain([opts, 'optionalAccess', _14 => _14.relative])\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    let scopedContext = init.unstable_getContext ? await init.unstable_getContext() : new unstable_RouterContextProvider();\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(requestMatches, path);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId\n      });\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties,\n      manifest,\n      fetchRequest,\n      requestMatches,\n      match,\n      hydrationRouteProperties,\n      scopedContext\n    );\n    let actionResults = await callDataStrategy(\n      fetchRequest,\n      fetchMatches,\n      scopedContext,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      revalidationRequest,\n      scopedContext,\n      mapRouteProperties,\n      manifest,\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      hydrationRouteProperties,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      revalidationRequest,\n      scopedContext\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(matches, path);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties,\n      manifest,\n      fetchRequest,\n      matches,\n      match,\n      hydrationRouteProperties,\n      scopedContext\n    );\n    let results = await callDataStrategy(\n      fetchRequest,\n      dsMatches,\n      scopedContext,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (isAbsoluteUrl(location)) {\n        const url = createBrowserURLImpl(location, true);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        request,\n        matches,\n        fetcherKey,\n        scopedContext,\n        false\n      );\n    } catch (e) {\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    if (request.signal.aborted) {\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(\n      request,\n      matches,\n      scopedContext,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.request && f.controller) {\n          let results = await callDataStrategy(\n            f.request,\n            f.matches,\n            scopedContext,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties,\n              false\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children, unstable_allowElementMutations = false) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties,\n      unstable_allowElementMutations\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n    _internalSetStateDoNotUseOrYouWillBreakYourApp(newState) {\n      updateState(newState);\n    }\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties = _optionalChain([opts, 'optionalAccess', _15 => _15.mapRouteProperties]) || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  async function query(request, {\n    requestContext,\n    filterMatchesToLoad,\n    skipLoaderErrorBubbling,\n    skipRevalidation,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      try {\n        await loadLazyMiddlewareForMatches(\n          matches,\n          manifest,\n          mapRouteProperties\n        );\n        let renderedStaticContext;\n        let response = await runServerMiddlewarePipeline(\n          {\n            request,\n            matches,\n            params: matches[0].params,\n            // If we're calling middleware then it must be enabled so we can cast\n            // this to the proper type knowing it's not an `AppLoadContext`\n            context: requestContext\n          },\n          async () => {\n            let res = await generateMiddlewareResponse(\n              async (revalidationRequest, opts2 = {}) => {\n                let result2 = await queryImpl(\n                  revalidationRequest,\n                  location,\n                  matches,\n                  requestContext,\n                  dataStrategy || null,\n                  skipLoaderErrorBubbling === true,\n                  null,\n                  \"filterMatchesToLoad\" in opts2 ? _nullishCoalesce(opts2.filterMatchesToLoad, () => ( null)) : null,\n                  skipRevalidation === true\n                );\n                if (isResponse(result2)) {\n                  return result2;\n                }\n                renderedStaticContext = { location, basename, ...result2 };\n                return renderedStaticContext;\n              }\n            );\n            return res;\n          },\n          async (error, routeId) => {\n            if (isRedirectResponse(error)) {\n              return error;\n            }\n            if (isResponse(error)) {\n              try {\n                error = new ErrorResponseImpl(\n                  error.status,\n                  error.statusText,\n                  await parseResponseBody(error)\n                );\n              } catch (e) {\n                error = e;\n              }\n            }\n            if (isDataWithResponseInit(error)) {\n              error = dataWithResponseInitToErrorResponse(error);\n            }\n            if (renderedStaticContext) {\n              if (routeId in renderedStaticContext.loaderData) {\n                renderedStaticContext.loaderData[routeId] = void 0;\n              }\n              let staticContext = getStaticContextFromError(\n                dataRoutes,\n                renderedStaticContext,\n                error,\n                skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id\n              );\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            } else {\n              let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(\n                matches,\n                _optionalChain([matches, 'access', _16 => _16.find, 'call', _17 => _17(\n                  (m) => m.route.id === routeId || m.route.loader\n                ), 'optionalAccess', _18 => _18.route, 'access', _19 => _19.id]) || routeId\n              ).route.id;\n              let staticContext = {\n                matches,\n                location,\n                basename,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                  [boundaryRouteId]: error\n                },\n                statusCode: isRouteErrorResponse(error) ? error.status : 500,\n                actionHeaders: {},\n                loaderHeaders: {}\n              };\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            }\n          }\n        );\n        invariant(isResponse(response), \"Expected a response in query()\");\n        return response;\n      } catch (e) {\n        if (isResponse(e)) {\n          return e;\n        }\n        throw e;\n      }\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null,\n      filterMatchesToLoad || null,\n      skipRevalidation === true\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    return { location, basename, ...result };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy,\n    unstable_generateMiddlewareResponse: generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties);\n      let response = await runServerMiddlewarePipeline(\n        {\n          request,\n          matches,\n          params: matches[0].params,\n          // If we're calling middleware then it must be enabled so we can cast\n          // this to the proper type knowing it's not an `AppLoadContext`\n          context: requestContext\n        },\n        async () => {\n          let res = await generateMiddlewareResponse(\n            async (innerRequest) => {\n              let result2 = await queryImpl(\n                innerRequest,\n                location,\n                matches,\n                requestContext,\n                dataStrategy || null,\n                false,\n                match,\n                null,\n                false\n              );\n              let processed = handleQueryResult(result2);\n              return isResponse(processed) ? processed : typeof processed === \"string\" ? new Response(processed) : Response.json(processed);\n            }\n          );\n          return res;\n        },\n        (error) => {\n          if (isDataWithResponseInit(error)) {\n            return Promise.resolve(dataWithResponseInitToResponse(error));\n          }\n          if (isResponse(error)) {\n            return Promise.resolve(error);\n          }\n          throw error;\n        }\n      );\n      return response;\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match,\n      null,\n      false\n    );\n    return handleQueryResult(result);\n    function handleQueryResult(result2) {\n      if (isResponse(result2)) {\n        return result2;\n      }\n      let error = result2.errors ? Object.values(result2.errors)[0] : void 0;\n      if (error !== void 0) {\n        throw error;\n      }\n      if (result2.actionData) {\n        return Object.values(result2.actionData)[0];\n      }\n      if (result2.loaderData) {\n        return Object.values(result2.loaderData)[0];\n      }\n      return void 0;\n    }\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null,\n          filterMatchesToLoad,\n          skipRevalidation\n        );\n        return result2;\n      }\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch,\n        filterMatchesToLoad\n      );\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        [],\n        requestContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    if (skipRevalidation) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n          actionData: null,\n          actionHeaders: {\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n          },\n          matches,\n          loaderData: {},\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          loaderHeaders: {}\n        };\n      } else {\n        return {\n          actionData: {\n            [actionMatch.route.id]: result.data\n          },\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\n          matches,\n          loaderData: {},\n          errors: null,\n          statusCode: result.statusCode || 200,\n          loaderHeaders: {}\n        };\n      }\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let handlerContext2 = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        filterMatchesToLoad,\n        [boundaryMatch.route.id, result]\n      );\n      return {\n        ...handlerContext2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n        }\n      };\n    }\n    let handlerContext = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null,\n      filterMatchesToLoad\n    );\n    return {\n      ...handlerContext,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !_optionalChain([routeMatch, 'optionalAccess', _20 => _20.route, 'access', _21 => _21.loader]) && !_optionalChain([routeMatch, 'optionalAccess', _22 => _22.route, 'access', _23 => _23.lazy])) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: _optionalChain([routeMatch, 'optionalAccess', _24 => _24.route, 'access', _25 => _25.id])\n      });\n    }\n    let dsMatches;\n    if (routeMatch) {\n      dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties,\n        manifest,\n        request,\n        matches,\n        routeMatch,\n        [],\n        requestContext\n      );\n    } else {\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (\n        // Up to but not including the boundary\n        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1\n      ) : void 0;\n      dsMatches = matches.map((match, index) => {\n        if (maxIdx != null && index > maxIdx) {\n          return getDataStrategyMatch(\n            mapRouteProperties,\n            manifest,\n            request,\n            match,\n            [],\n            requestContext,\n            false\n          );\n        }\n        return getDataStrategyMatch(\n          mapRouteProperties,\n          manifest,\n          request,\n          match,\n          [],\n          requestContext,\n          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))\n        );\n      });\n    }\n    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(\n      request,\n      dsMatches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let handlerContext = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      true,\n      skipLoaderErrorBubbling\n    );\n    return {\n      ...handlerContext,\n      matches\n    };\n  }\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      request,\n      matches,\n      null,\n      requestContext,\n      true\n    );\n    let dataResults = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResult(result)) {\n          let response = result.result;\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename\n          );\n        }\n        if (isRouteRequest) {\n          if (isResponse(result.result)) {\n            throw result;\n          } else if (isDataWithResponseInit(result.result)) {\n            throw dataWithResponseInitToResponse(result.result);\n          }\n        }\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\n  return {\n    ...handlerContext,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [errorBoundaryId]: error\n    }\n  };\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n  );\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = prependBasename({ basename, pathname: path.pathname });\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, hasPatchRoutesOnNavigation, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: _optionalChain([state, 'access', _26 => _26.matches, 'access', _27 => _27[0], 'optionalAccess', _28 => _28.params]) || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let { route } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(\n        route,\n        state.loaderData,\n        state.errors\n      );\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(\n        mapRouteProperties,\n        manifest,\n        request,\n        match,\n        lazyRoutePropertiesToSkip,\n        scopedContext,\n        forceShouldLoad\n      );\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\n    );\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(\n      mapRouteProperties,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      shouldLoad,\n      shouldRevalidateArgs\n    );\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let isMidInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0;\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      if (hasPatchRoutesOnNavigation && isMidInitialLoad) {\n        return;\n      }\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      history,\n      f.path,\n      fetchController.signal\n    );\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties,\n        manifest,\n        fetchRequest,\n        fetcherMatches,\n        fetcherMatch,\n        lazyRoutePropertiesToSkip,\n        scopedContext\n      );\n    } else if (isMidInitialLoad) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext\n        );\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext,\n          shouldRevalidateArgs\n        );\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return { dsMatches, revalidatingFetchers };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && route.id in loaderData;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties, allowElementMutations) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = [];\n  let existingChildren = [];\n  children.forEach((newRoute) => {\n    let existingRoute = childrenToPatch.find(\n      (existingRoute2) => isSameRoute(newRoute, existingRoute2)\n    );\n    if (existingRoute) {\n      existingChildren.push({ existingRoute, newRoute });\n    } else {\n      uniqueChildren.push(newRoute);\n    }\n  });\n  if (uniqueChildren.length > 0) {\n    let newRoutes = convertRoutesToDataRoutes(\n      uniqueChildren,\n      mapRouteProperties,\n      [routeId || \"_\", \"patch\", String(_optionalChain([childrenToPatch, 'optionalAccess', _29 => _29.length]) || \"0\")],\n      manifest\n    );\n    childrenToPatch.push(...newRoutes);\n  }\n  if (allowElementMutations && existingChildren.length > 0) {\n    for (let i = 0; i < existingChildren.length; i++) {\n      let { existingRoute, newRoute } = existingChildren[i];\n      let existingRouteTyped = existingRoute;\n      let [newRouteTyped] = convertRoutesToDataRoutes(\n        [newRoute],\n        mapRouteProperties,\n        [],\n        // Doesn't matter for mutated routes since they already have an id\n        {},\n        // Don't touch the manifest here since we're updating in place\n        true\n      );\n      Object.assign(existingRouteTyped, {\n        element: newRouteTyped.element ? newRouteTyped.element : existingRouteTyped.element,\n        errorElement: newRouteTyped.errorElement ? newRouteTyped.errorElement : existingRouteTyped.errorElement,\n        hydrateFallbackElement: newRouteTyped.hydrateFallbackElement ? newRouteTyped.hydrateFallbackElement : existingRouteTyped.hydrateFallbackElement\n      });\n    }\n  }\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => _optionalChain([existingRoute, 'access', _30 => _30.children, 'optionalAccess', _31 => _31.some, 'call', _32 => _32((bChild) => isSameRoute(aChild, bChild))])\n  );\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(\n        !isUnsupported,\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\n      );\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(\n        false,\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\n      );\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, { [key]: value });\n        Object.assign(routeToUpdate, mapRouteProperties(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(\n        typeof route.lazy === \"function\",\n        \"No lazy route function found\"\n      );\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(\n            !isUnsupported,\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\n          );\n        } else if (isStaticallyDefined) {\n          warning(\n            !isStaticallyDefined,\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n          );\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {\n    });\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\n  }) : void 0;\n  _optionalChain([lazyRoutePromise, 'optionalAccess', _33 => _33.catch, 'call', _34 => _34(() => {\n  })]);\n  _optionalChain([lazyHandlerPromise, 'optionalAccess', _35 => _35.catch, 'call', _36 => _36(() => {\n  })]);\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nfunction isNonNullable(value) {\n  return value !== void 0;\n}\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties) {\n  let promises = matches.map(({ route }) => {\n    if (typeof route.lazy !== \"object\" || !route.lazy.unstable_middleware) {\n      return void 0;\n    }\n    return loadLazyRouteProperty({\n      key: \"unstable_middleware\",\n      route,\n      manifest,\n      mapRouteProperties\n    });\n  }).filter(isNonNullable);\n  return promises.length > 0 ? Promise.all(promises) : void 0;\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runClientMiddlewarePipeline(args, () => defaultDataStrategy(args));\n}\nfunction runServerMiddlewarePipeline(args, handler, errorHandler) {\n  return runMiddlewarePipeline(\n    args,\n    handler,\n    processResult,\n    isResponse,\n    errorHandler\n  );\n  function processResult(result) {\n    return isDataWithResponseInit(result) ? dataWithResponseInitToResponse(result) : result;\n  }\n}\nfunction runClientMiddlewarePipeline(args, handler) {\n  return runMiddlewarePipeline(\n    args,\n    handler,\n    (r) => r,\n    // No post-processing needed on the client\n    isDataStrategyResults,\n    errorHandler\n  );\n  function errorHandler(error, routeId, nextResult) {\n    if (nextResult) {\n      return Promise.resolve(\n        Object.assign(nextResult.value, {\n          [routeId]: { type: \"error\", result: error }\n        })\n      );\n    } else {\n      let { matches } = args;\n      let maxBoundaryIdx = Math.min(\n        // Throwing route\n        matches.findIndex((m) => m.route.id === routeId) || 0,\n        // or the shallowest route that needs to load data\n        matches.findIndex((m) => m.unstable_shouldCallHandler()) || 0\n      );\n      let boundaryRouteId = findNearestBoundary(\n        matches,\n        matches[maxBoundaryIdx].route.id\n      ).route.id;\n      return Promise.resolve({\n        [boundaryRouteId]: { type: \"error\", result: error }\n      });\n    }\n  }\n}\nasync function runMiddlewarePipeline(args, handler, processResult, isResult, errorHandler) {\n  let { matches, request, params, context } = args;\n  let tuples = matches.flatMap(\n    (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n  );\n  let result = await callRouteMiddleware(\n    { request, params, context },\n    tuples,\n    handler,\n    processResult,\n    isResult,\n    errorHandler\n  );\n  return result;\n}\nasync function callRouteMiddleware(args, middlewares, handler, processResult, isResult, errorHandler, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    throw _nullishCoalesce(request.signal.reason, () => ( new Error(`Request aborted: ${request.method} ${request.url}`)));\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    let result = await handler();\n    return result;\n  }\n  let [routeId, middleware] = tuple;\n  let nextResult;\n  let next = async () => {\n    if (nextResult) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    try {\n      let result = await callRouteMiddleware(\n        args,\n        middlewares,\n        handler,\n        processResult,\n        isResult,\n        errorHandler,\n        idx + 1\n      );\n      nextResult = { value: result };\n      return nextResult.value;\n    } catch (error) {\n      nextResult = { value: await errorHandler(error, routeId, nextResult) };\n      return nextResult.value;\n    }\n  };\n  try {\n    let value = await middleware(args, next);\n    let result = value != null ? processResult(value) : void 0;\n    if (isResult(result)) {\n      return result;\n    } else if (nextResult) {\n      return _nullishCoalesce(result, () => ( nextResult.value));\n    } else {\n      nextResult = { value: await next() };\n      return nextResult.value;\n    }\n  } catch (error) {\n    let response = await errorHandler(error, routeId, nextResult);\n    return response;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties\n  });\n  let lazyRoutePromises = loadLazyRoute(\n    match.route,\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\n    manifest,\n    mapRouteProperties,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\n    mapRouteProperties,\n    manifest,\n    request,\n    match,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && !isMutationMethod(request.method) && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _optionalChain([_lazyPromises, 'optionalAccess', _37 => _37.handler]),\n          lazyRoutePromise: _optionalChain([_lazyPromises, 'optionalAccess', _38 => _38.route]),\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map((match) => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(\n          mapRouteProperties,\n          manifest,\n          request,\n          match,\n          lazyRoutePropertiesToSkip\n        ),\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\n      };\n    }\n    return getDataStrategyMatch(\n      mapRouteProperties,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      true,\n      shouldRevalidateArgs\n    );\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some((m) => _optionalChain([m, 'access', _39 => _39._lazyPromises, 'optionalAccess', _40 => _40.middleware]))) {\n    await Promise.all(matches.map((m) => _optionalChain([m, 'access', _41 => _41._lazyPromises, 'optionalAccess', _42 => _42.middleware])));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\n    );\n  } : (cb) => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runClientMiddlewarePipeline(typedDataStrategyArgs, () => {\n      return cb({\n        ...typedDataStrategyArgs,\n        fetcherKey,\n        unstable_runClientMiddleware: () => {\n          throw new Error(\n            \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\n          );\n        }\n      });\n    });\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(\n      matches.flatMap((m) => [\n        _optionalChain([m, 'access', _43 => _43._lazyPromises, 'optionalAccess', _44 => _44.handler]),\n        _optionalChain([m, 'access', _45 => _45._lazyPromises, 'optionalAccess', _46 => _46.route])\n      ])\n    );\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: scopedContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          // Ensure all lazy route promises are resolved before continuing\n          lazyHandlerPromise,\n          lazyRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function parseResponseBody(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n    return response.body == null ? null : response.json();\n  }\n  return response.text();\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      data2 = await parseResponseBody(result);\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: _optionalChain([result, 'access', _47 => _47.init, 'optionalAccess', _48 => _48.status]),\n          headers: _optionalChain([result, 'access', _49 => _49.init, 'optionalAccess', _50 => _50.headers]) ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          _optionalChain([result, 'access', _51 => _51.init, 'optionalAccess', _52 => _52.status]) || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: _optionalChain([result, 'access', _53 => _53.init, 'optionalAccess', _54 => _54.headers]) ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: _optionalChain([result, 'access', _55 => _55.init, 'optionalAccess', _56 => _56.status]),\n      headers: _optionalChain([result, 'access', _57 => _57.init, 'optionalAccess', _58 => _58.headers]) ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!isAbsoluteUrl(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (isAbsoluteUrl(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    if (pendingActionResult[2]) {\n      loaderData[pendingActionResult[2]] = void 0;\n    }\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\n    let { key, match, controller } = rf;\n    if (controller && controller.signal.aborted) {\n      return;\n    }\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, _optionalChain([match, 'optionalAccess', _59 => _59.route, 'access', _60 => _60.id]));\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction dataWithResponseInitToResponse(data2) {\n  return Response.json(data2.data, _nullishCoalesce(data2.init, () => ( void 0)));\n}\nfunction dataWithResponseInitToErrorResponse(data2) {\n  return new ErrorResponseImpl(\n    _nullishCoalesce(_optionalChain([data2, 'access', _61 => _61.init, 'optionalAccess', _62 => _62.status]), () => ( 500)),\n    _nullishCoalesce(_optionalChain([data2, 'access', _63 => _63.init, 'optionalAccess', _64 => _64.statusText]), () => ( \"Internal Server Error\")),\n    data2.data\n  );\n}\nfunction isDataStrategyResults(result) {\n  return result != null && typeof result === \"object\" && Object.entries(result).every(\n    ([key, value]) => typeof key === \"string\" && isDataStrategyResult(value)\n  );\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar _react = require('react'); var React = _interopRequireWildcard(_react); var React2 = _interopRequireWildcard(_react); var React3 = _interopRequireWildcard(_react); var React8 = _interopRequireWildcard(_react); var React7 = _interopRequireWildcard(_react); var React6 = _interopRequireWildcard(_react); var React5 = _interopRequireWildcard(_react); var React4 = _interopRequireWildcard(_react);\n\n// vendor/turbo-stream-v2/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred = class {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// vendor/turbo-stream-v2/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing) return [existing];\n  if (input === void 0) return UNDEFINED;\n  if (input === null) return NULL;\n  if (Number.isNaN(input)) return NAN;\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            const dateTime = input2.getTime();\n            str[index2] = `[\"${TYPE_DATE}\",${Number.isNaN(dateTime) ? JSON.stringify(\"invalid\") : dateTime}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// vendor/turbo-stream-v2/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = value.length - 1; i > 0; i--)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = value.length - 2; i > 0; i -= 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// vendor/turbo-stream-v2/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = _nullishCoalesce(options, () => ( {}));\n  const done = new Deferred();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value) continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = _nullishCoalesce(options, () => ( {}));\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      if (Object.keys(encoder.deferred).length) {\n        let raceDone;\n        const racePromise = new Promise((resolve, reject) => {\n          raceDone = resolve;\n          if (signal) {\n            const rejectPromise = () => reject(signal.reason || new Error(\"Signal was aborted.\"));\n            if (signal.aborted) {\n              rejectPromise();\n            } else {\n              signal.addEventListener(\"abort\", (event) => {\n                rejectPromise();\n              });\n            }\n          }\n        });\n        while (Object.keys(encoder.deferred).length > 0) {\n          for (const [deferredId, deferred] of Object.entries(\n            encoder.deferred\n          )) {\n            if (seenPromises.has(deferred)) continue;\n            seenPromises.add(\n              // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n              encoder.deferred[Number(deferredId)] = Promise.race([\n                racePromise,\n                deferred\n              ]).then(\n                (resolved) => {\n                  const id2 = flatten.call(encoder, resolved);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                },\n                (reason) => {\n                  if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                    reason = new Error(\"An unknown error occurred\");\n                  }\n                  const id2 = flatten.call(encoder, reason);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                }\n              ).finally(() => {\n                delete encoder.deferred[Number(deferredId)];\n              })\n            );\n          }\n          await Promise.race(Object.values(encoder.deferred));\n        }\n        raceDone();\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar SingleFetchNoResultError = class extends Error {\n};\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let { streamCache } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then((result) => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, { stream: true })\n      };\n    }).catch((e) => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let { done, value } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */ React.createElement(\n    \"script\",\n    {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\n          JSON.stringify(value)\n        )});`\n      }\n    }\n  ) : null;\n  if (done) {\n    return /* @__PURE__ */ React.createElement(React.Fragment, null, scriptTag, /* @__PURE__ */ React.createElement(\n      \"script\",\n      {\n        nonce,\n        dangerouslySetInnerHTML: {\n          __html: `window.__reactRouterContext.streamController.close();`\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ React.createElement(React.Fragment, null, scriptTag, /* @__PURE__ */ React.createElement(React.Suspense, null, /* @__PURE__ */ React.createElement(\n      StreamTransfer,\n      {\n        context,\n        identifier: identifier + 1,\n        reader,\n        textDecoder,\n        nonce\n      }\n    )));\n  }\n}\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    (match) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      invariant2(manifestRoute, \"Route not found in manifest\");\n      let routeModule = routeModules[match.route.id];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        hasShouldRevalidate: Boolean(_optionalChain([routeModule, 'optionalAccess', _65 => _65.shouldRevalidate]))\n      };\n    },\n    fetchAndDecodeViaTurboStream,\n    ssr,\n    basename\n  );\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  return async (args) => {\n    let { request, matches, fetcherKey } = args;\n    let router = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some((m) => {\n      let { hasLoader, hasClientLoader } = getRouteInfo(m);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      args,\n      router,\n      getRouteInfo,\n      fetchAndDecode,\n      ssr,\n      basename,\n      shouldAllowOptOut\n    );\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\n        actionMatch.route.id\n      ]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(\n    (m) => m.unstable_shouldCallHandler()\n  );\n  let results = {};\n  await Promise.all(\n    matchesToLoad.map(\n      (m) => m.resolve(async (handler) => {\n        try {\n          let { hasClientLoader } = getRouteInfo(m);\n          let routeId = m.route.id;\n          let result = hasClientLoader ? await handler(async () => {\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n            return unwrapSingleFetchResult(data2, routeId);\n          }) : await handler();\n          results[m.route.id] = { type: \"data\", result };\n        } catch (e) {\n          results[m.route.id] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(\n    args.matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let routeId = m.route.id;\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n        if (!shouldCall) {\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\n          hasLoader && // for a route with a server loader,\n          hasShouldRevalidate === true);\n          return;\n        }\n        if (shouldAllowOptOut(m) && hasClientLoader) {\n          if (hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await handler(async () => {\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n              return unwrapSingleFetchResult(data2, routeId);\n            });\n            results[routeId] = { type: \"data\", result };\n          } catch (e) {\n            results[routeId] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (hasLoader) {\n          routesParams.add(routeId);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResult(data2, routeId);\n          });\n          results[routeId] = { type: \"data\", result };\n        } catch (e) {\n          results[routeId] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  await Promise.all(routeDfds.map((d) => d.promise));\n  let isInitialLoad = !router.state.initialized && router.state.navigation.state === \"idle\";\n  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({ routes: {} });\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  await bubbleMiddlewareErrors(\n    singleFetchDfd.promise,\n    args.matches,\n    routesParams,\n    results\n  );\n  return results;\n}\nasync function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {\n  try {\n    let middlewareError;\n    let fetchedData = await singleFetchPromise;\n    if (\"routes\" in fetchedData) {\n      for (let match of matches) {\n        if (match.route.id in fetchedData.routes) {\n          let routeResult = fetchedData.routes[match.route.id];\n          if (\"error\" in routeResult) {\n            middlewareError = routeResult.error;\n            if (_optionalChain([results, 'access', _66 => _66[match.route.id], 'optionalAccess', _67 => _67.result]) == null) {\n              results[match.route.id] = {\n                type: \"error\",\n                result: middlewareError\n              };\n            }\n            break;\n          }\n        }\n      }\n    }\n    if (middlewareError !== void 0) {\n      Array.from(routesParams.values()).forEach((routeId) => {\n        if (results[routeId].result instanceof SingleFetchNoResultError) {\n          results[routeId].result = middlewareError;\n        }\n      });\n    }\n  } catch (e) {\n  }\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(\n    async (handler) => handler(async () => {\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n      return unwrapSingleFetchResult(data2, routeId);\n    })\n  );\n  return { [fetcherMatch.route.id]: result };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename, extension) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = `_root.${extension}`;\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.${extension}`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.${extension}`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let { request } = args;\n  let url = singleFetchUrl(request.url, basename, \"data\");\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\n    return {\n      status: SINGLE_FETCH_REDIRECT_STATUS,\n      data: {\n        redirect: {\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\n        }\n      }\n    };\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = { data: void 0 };\n    }\n    return {\n      status: res.status,\n      data: { routes }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\n      } else {\n        data2 = { routes: typed };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = _optionalChain([targetRoutes, 'optionalAccess', _68 => _68[0]]);\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = { redirect: typed };\n      } else {\n        data2 = { routes: { [routeId]: typed } };\n      }\n    }\n    return { status: res.status, data: data2 };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return decode(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global && typeof global[name] === \"function\") {\n            Constructor = global[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (routeResult == null) {\n    throw new SingleFetchNoResultError(\n      `No result found for routeId \"${routeId}\"`\n    );\n  } else if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`Invalid response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/context.ts\n\nvar DataRouterContext = React2.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React2.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar RSCRouterContext = React2.createContext(false);\nfunction useIsRSCRouterContext() {\n  return React2.useContext(RSCRouterContext);\n}\nvar ViewTransitionContext = React2.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React2.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React2.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React2.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React2.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React2.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React2.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\nvar ENABLE_DEV_WARNINGS = true;\n\n// lib/hooks.tsx\n\nfunction useHref(to, { relative } = {}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n  let { basename, navigator } = React3.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\nfunction useInRouterContext() {\n  return React3.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React3.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React3.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n  let { pathname } = useLocation();\n  return React3.useMemo(\n    () => matchPath(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React3.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React3.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let { isDataRoute } = React3.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let dataRouterContext = React3.useContext(DataRouterContext);\n  let { basename, navigator } = React3.useContext(NavigationContext);\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React3.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React3.useCallback(\n    (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext\n    ]\n  );\n  return navigate;\n}\nvar OutletContext = React3.createContext(null);\nfunction useOutletContext() {\n  return React3.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React3.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /* @__PURE__ */ React3.createElement(OutletContext.Provider, { value: context }, outlet);\n  }\n  return outlet;\n}\nfunction useParams() {\n  let { matches } = React3.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, { relative } = {}) {\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React3.useMemo(\n    () => resolveTo(\n      to,\n      JSON.parse(routePathnamesJson),\n      locationPathname,\n      relative === \"path\"\n    ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, unstable_onError, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator } = React3.useContext(NavigationContext);\n  let { matches: parentMatches } = React3.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || _optionalChain([parsedLocationArg, 'access', _69 => _69.pathname, 'optionalAccess', _70 => _70.startsWith, 'call', _71 => _71(parentPathnameBase)]),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    unstable_onError,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React3.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React3.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React3.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React3.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React3.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React3.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React3.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    if (this.props.unstable_onError) {\n      this.props.unstable_onError(error, errorInfo);\n    } else {\n      console.error(\n        \"React Router caught the following error during render\",\n        error\n      );\n    }\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React3.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React3.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React3.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React3.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, unstable_onError = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = _optionalChain([dataRouterState, 'optionalAccess', _72 => _72.errors]);\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && _optionalChain([errors, 'optionalAccess', _73 => _73[m.route.id]]) !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight(\n    (outlet, match, index) => {\n      let error;\n      let shouldRenderHydrateFallback = false;\n      let errorElement = null;\n      let hydrateFallbackElement = null;\n      if (dataRouterState) {\n        error = errors && match.route.id ? errors[match.route.id] : void 0;\n        errorElement = match.route.errorElement || defaultErrorElement;\n        if (renderFallback) {\n          if (fallbackIndex < 0 && index === 0) {\n            warningOnce(\n              \"route-fallback\",\n              false,\n              \"No `HydrateFallback` element provided to render during initial hydration\"\n            );\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = null;\n          } else if (fallbackIndex === index) {\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n          }\n        }\n      }\n      let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n      let getChildren = () => {\n        let children;\n        if (error) {\n          children = errorElement;\n        } else if (shouldRenderHydrateFallback) {\n          children = hydrateFallbackElement;\n        } else if (match.route.Component) {\n          children = /* @__PURE__ */ React3.createElement(match.route.Component, null);\n        } else if (match.route.element) {\n          children = match.route.element;\n        } else {\n          children = outlet;\n        }\n        return /* @__PURE__ */ React3.createElement(\n          RenderedRoute,\n          {\n            match,\n            routeContext: {\n              outlet,\n              matches: matches2,\n              isDataRoute: dataRouterState != null\n            },\n            children\n          }\n        );\n      };\n      return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React3.createElement(\n        RenderErrorBoundary,\n        {\n          location: dataRouterState.location,\n          revalidation: dataRouterState.revalidation,\n          component: errorElement,\n          error,\n          children: getChildren(),\n          routeContext: { outlet: null, matches: matches2, isDataRoute: true },\n          unstable_onError\n        }\n      ) : getChildren();\n    },\n    null\n  );\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React3.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React3.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React3.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  let revalidate = React3.useCallback(async () => {\n    await dataRouterContext.router.revalidate();\n  }, [dataRouterContext.router]);\n  return React3.useMemo(\n    () => ({ revalidate, state: state.revalidation }),\n    [revalidate, state.revalidation]\n  );\n}\nfunction useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    \"useMatches\" /* UseMatches */\n  );\n  return React3.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React3.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return _optionalChain([state, 'access', _74 => _74.errors, 'optionalAccess', _75 => _75[routeId]]);\n}\nfunction useAsyncValue() {\n  let value = React3.useContext(AwaitContext);\n  return _optionalChain([value, 'optionalAccess', _76 => _76._data]);\n}\nfunction useAsyncError() {\n  let value = React3.useContext(AwaitContext);\n  return _optionalChain([value, 'optionalAccess', _77 => _77._error]);\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React3.useState(\"\");\n  let blockerFunction = React3.useCallback(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        },\n        historyAction\n      });\n    },\n    [basename, shouldBlock]\n  );\n  React3.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React3.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React3.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React3.useCallback(\n    async (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        await router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\n\n\n// lib/dom/ssr/components.tsx\n\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await Promise.resolve().then(() => _interopRequireWildcard(require(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    )));\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    void 0) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map((match) => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [\n      route && route.css ? route.css.map((href) => ({ rel: \"stylesheet\", href })) : [],\n      _optionalChain([module, 'optionalAccess', _78 => _78.links, 'optionalCall', _79 => _79()]) || []\n    ];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href) => ({ rel: \"stylesheet\", href }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(\n    matches.map(async (match) => {\n      let route = manifest.routes[match.route.id];\n      if (route) {\n        let mod = await loadRouteModule(route, routeModules);\n        return mod.links ? mod.links() : [];\n      }\n      return [];\n    })\n  );\n  return dedupeLinkDescriptors(\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\n    )\n  );\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      _optionalChain([currentMatches, 'access', _80 => _80[index], 'access', _81 => _81.route, 'access', _82 => _82.path, 'optionalAccess', _83 => _83.endsWith, 'call', _84 => _84(\"*\")]) && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter(\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\n    );\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(\n            location.pathname + location.search + location.hash,\n            window.origin\n          ),\n          currentParams: _optionalChain([currentMatches, 'access', _85 => _85[0], 'optionalAccess', _86 => _86.params]) || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */ new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({ key, link: descriptor });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/dom/ssr/fog-of-war.ts\n\n\n// lib/dom/ssr/routes.tsx\n\n\n// lib/dom/ssr/fallback.tsx\n\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React4.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */ React4.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ) : null);\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component3 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React5.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component3 ? {\n        element: /* @__PURE__ */ React5.createElement(routeModule.Layout, null, /* @__PURE__ */ React5.createElement(Component3, null))\n      } : { Component: Component3 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React5.createElement(routeModule.Layout, null, /* @__PURE__ */ React5.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React5.createElement(routeModule.Layout, null, /* @__PURE__ */ React5.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component3, ErrorBoundary, HydrateFallback };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModules[route.id];\n    invariant2(\n      routeModule,\n      \"No `routeModule` available to create server routes\"\n    );\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need middleware/action/shouldRevalidate on these routes since\n      // they're for a static render\n    };\n    let children = createServerRoutes(\n      manifest,\n      routeModules,\n      future,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      spaModeLazyPromise\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      Promise.resolve().then(() => _interopRequireWildcard(require(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      )));\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          dataRoute.path,\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? _optionalChain([initialState, 'optionalAccess', _87 => _87.loaderData, 'optionalAccess', _88 => _88[route.id]]) : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? _optionalChain([initialState, 'optionalAccess', _89 => _89.errors, 'optionalAccess', _90 => _90[route.id]]) : void 0;\n      let isHydrationRequest = needsRevalidation == null && (_optionalChain([routeModule, 'access', _91 => _91.clientLoader, 'optionalAccess', _92 => _92.hydrate]) === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route.id,\n        routeModule.clientLoader,\n        route.hasLoader,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise((resolve) => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\n            route,\n            routeModulesCache\n          );\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let { clientLoader } = route.clientLoaderModule ? await Promise.resolve().then(() => _interopRequireWildcard(require(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          ))) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? Promise.resolve().then(() => _interopRequireWildcard(require(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          ))) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await Promise.resolve().then(() => _interopRequireWildcard(require(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientMiddlewareModule\n          ))) : await getLazyRoute();\n          invariant2(\n            unstable_clientMiddleware,\n            \"No `unstable_clientMiddleware` export found\"\n          );\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(\n            dataRoute.path,\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          );\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return (opts) => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(routeDiscovery, ssr) {\n  return routeDiscovery.mode === \"lazy\" && ssr === true;\n}\nfunction getPartialManifest({ sri, ...manifest }, router) {\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal, fetcherKey }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      fetcherKey ? window.location.href : path,\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      routeDiscovery.manifestPath,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {\n  React6.useEffect(() => {\n    if (!isFogOfWarEnabled(routeDiscovery, ssr) || // @ts-expect-error - TS doesn't know about this yet\n    _optionalChain([window, 'access', _93 => _93.navigator, 'optionalAccess', _94 => _94.connection, 'optionalAccess', _95 => _95.saveData]) === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          null,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router.basename,\n          routeDiscovery.manifestPath,\n          router.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);\n}\nfunction getManifestPath(_manifestPath, basename) {\n  let manifestPath = _manifestPath || \"/__manifest\";\n  if (basename == null) {\n    return manifestPath;\n  }\n  return `${basename}${manifestPath}`.replace(/\\/+/g, \"/\");\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {\n  const searchParams = new URLSearchParams();\n  paths.sort().forEach((path) => searchParams.append(\"p\", path));\n  searchParams.set(\"version\", manifest.version);\n  let url = new URL(\n    getManifestPath(manifestPath, basename),\n    window.location.origin\n  );\n  url.search = searchParams.toString();\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\n        );\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\n          \"Unable to discover routes due to manifest version mismatch.\"\n        );\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      console.warn(\"Detected manifest version mismatch, reloading...\");\n      await new Promise(() => {\n      });\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (_optionalChain([signal, 'optionalAccess', _96 => _96.aborted])) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React7.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React7.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React7.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React7.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React7.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React7.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React7.useState(false);\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\n  let ref = React7.useRef(null);\n  React7.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = (entries) => {\n        entries.forEach((entry) => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React7.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [\n    shouldPrefetch,\n    ref,\n    {\n      onFocus: composeEventHandlers(onFocus, setIntent),\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n    }\n  ];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar CRITICAL_CSS_DATA_ATTRIBUTE = \"data-react-router-critical-css\";\nfunction Links({ nonce }) {\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React7.useMemo(\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\n    [matches, routeModules, manifest]\n  );\n  return /* @__PURE__ */ React7.createElement(React7.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ React7.createElement(\n    \"style\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      dangerouslySetInnerHTML: { __html: criticalCss }\n    }\n  ) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ React7.createElement(\n    \"link\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      rel: \"stylesheet\",\n      href: criticalCss.href,\n      nonce\n    }\n  ) : null, keyedLinks.map(\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React7.createElement(PrefetchPageLinks, { key, nonce, ...link }) : /* @__PURE__ */ React7.createElement(\"link\", { key, nonce, ...link })\n  ));\n}\nfunction PrefetchPageLinks({ page, ...linkProps }) {\n  let { router } = useDataRouterContext2();\n  let matches = React7.useMemo(\n    () => matchRoutes(router.routes, page, router.basename),\n    [router.routes, page, router.basename]\n  );\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */ React7.createElement(PrefetchPageLinksImpl, { page, matches, ...linkProps });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let { manifest, routeModules } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React7.useState([]);\n  React7.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\n      (links) => {\n        if (!interrupted) {\n          setKeyedPrefetchLinks(links);\n        }\n      }\n    );\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let { manifest, routeModules } = useFrameworkContext();\n  let { basename } = useDataRouterContext2();\n  let { loaderData, matches } = useDataRouterStateContext();\n  let newMatchesForData = React7.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"data\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let newMatchesForAssets = React7.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"assets\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let dataHrefs = React7.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach((m) => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && _optionalChain([routeModules, 'access', _97 => _97[m.route.id], 'optionalAccess', _98 => _98.shouldRevalidate])) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page, basename, \"data\");\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\n        \"_routes\",\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n      );\n    }\n    return [url.pathname + url.search];\n  }, [\n    basename,\n    loaderData,\n    location,\n    manifest,\n    newMatchesForData,\n    nextMatches,\n    page,\n    routeModules\n  ]);\n  let moduleHrefs = React7.useMemo(\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\n    [newMatchesForAssets, manifest]\n  );\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */ React7.createElement(React7.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React7.createElement(\"link\", { key: href, rel: \"prefetch\", as: \"fetch\", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ React7.createElement(\"link\", { key: href, rel: \"modulepreload\", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\n    // these don't spread `linkProps` because they are full link descriptors\n    // already with their own props\n    /* @__PURE__ */ React7.createElement(\"link\", { key, nonce: linkProps.nonce, ...link })\n  )));\n}\nfunction Meta() {\n  let { isSpaMode, routeModules } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      loaderData: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (_optionalChain([routeModule, 'optionalAccess', _99 => _99.meta])) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        loaderData: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\n      );\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */ React7.createElement(React7.Fragment, null, meta.flat().map((metaProps) => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let { tagName, ...rest } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\n        );\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */ React7.createElement(Comp, { key: JSON.stringify(rest), ...rest });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */ React7.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      _nullishCoalesce(metaProps.charSet, () => ( (metaProps.charSet = metaProps.charset)));\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React7.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */ React7.createElement(\n          \"script\",\n          {\n            key: `script:ld+json:${json}`,\n            type: \"application/ld+json\",\n            dangerouslySetInnerHTML: { __html: json }\n          }\n        );\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */ React7.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction setIsHydrated() {\n  isHydrated = true;\n}\nfunction Scripts(scriptProps) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    renderMeta,\n    routeDiscovery,\n    ssr\n  } = useFrameworkContext();\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let isRSCRouterContext = useIsRSCRouterContext();\n  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React7.useEffect(() => {\n    setIsHydrated();\n  }, []);\n  let initialScripts = React7.useMemo(() => {\n    if (isRSCRouterContext) {\n      return null;\n    }\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${_optionalChain([manifest, 'access', _100 => _100.hmr, 'optionalAccess', _101 => _101.runtime]) ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...clientMiddlewareModule ? [\n          {\n            module: clientMiddlewareModule,\n            varName: `${routeVarName}_clientMiddleware`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React7.createElement(React7.Fragment, null, /* @__PURE__ */ React7.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React7.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated || isRSCRouterContext ? [] : dedupe(\n    manifest.entry.imports.concat(\n      getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n      })\n    )\n  );\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  warnOnce(\n    !isRSCRouterContext,\n    \"The <Scripts /> element is a no-op when using RSC and can be safely removed.\"\n  );\n  return isHydrated || isRSCRouterContext ? null : /* @__PURE__ */ React7.createElement(React7.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React7.createElement(\n    \"script\",\n    {\n      \"rr-importmap\": \"\",\n      type: \"importmap\",\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify({\n          integrity: sri\n        })\n      }\n    }\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React7.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.url],\n      suppressHydrationWarning: true\n    }\n  ) : null, /* @__PURE__ */ React7.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.entry.module],\n      suppressHydrationWarning: true\n    }\n  ), preloads.map((path) => /* @__PURE__ */ React7.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[path],\n      suppressHydrationWarning: true\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar RemixErrorBoundary = class extends React8.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React8.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React8.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React8.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React8.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React8.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React8.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React8.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (_optionalChain([routeModules, 'access', _102 => _102.root, 'optionalAccess', _103 => _103.Layout]) && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React8.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React8.createElement(\"head\", null, /* @__PURE__ */ React8.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React8.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React8.createElement(\"title\", null, title)), /* @__PURE__ */ React8.createElement(\"body\", null, /* @__PURE__ */ React8.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React8.createElement(Scripts, null) : null)));\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexports.Action = Action; exports.createMemoryHistory = createMemoryHistory; exports.createBrowserHistory = createBrowserHistory; exports.createHashHistory = createHashHistory; exports.invariant = invariant; exports.warning = warning; exports.createPath = createPath; exports.parsePath = parsePath; exports.unstable_createContext = unstable_createContext; exports.unstable_RouterContextProvider = unstable_RouterContextProvider; exports.convertRoutesToDataRoutes = convertRoutesToDataRoutes; exports.matchRoutes = matchRoutes; exports.generatePath = generatePath; exports.matchPath = matchPath; exports.stripBasename = stripBasename; exports.resolvePath = resolvePath; exports.getResolveToMatches = getResolveToMatches; exports.resolveTo = resolveTo; exports.joinPaths = joinPaths; exports.data = data; exports.redirect = redirect; exports.redirectDocument = redirectDocument; exports.replace = replace; exports.ErrorResponseImpl = ErrorResponseImpl; exports.isRouteErrorResponse = isRouteErrorResponse; exports.encode = encode; exports.IDLE_NAVIGATION = IDLE_NAVIGATION; exports.IDLE_FETCHER = IDLE_FETCHER; exports.IDLE_BLOCKER = IDLE_BLOCKER; exports.createRouter = createRouter; exports.createStaticHandler = createStaticHandler; exports.getStaticContextFromError = getStaticContextFromError; exports.isDataWithResponseInit = isDataWithResponseInit; exports.isResponse = isResponse; exports.isRedirectStatusCode = isRedirectStatusCode; exports.isRedirectResponse = isRedirectResponse; exports.isMutationMethod = isMutationMethod; exports.createRequestInit = createRequestInit; exports.SingleFetchRedirectSymbol = SingleFetchRedirectSymbol; exports.SINGLE_FETCH_REDIRECT_STATUS = SINGLE_FETCH_REDIRECT_STATUS; exports.NO_BODY_STATUS_CODES = NO_BODY_STATUS_CODES; exports.StreamTransfer = StreamTransfer; exports.getTurboStreamSingleFetchDataStrategy = getTurboStreamSingleFetchDataStrategy; exports.getSingleFetchDataStrategyImpl = getSingleFetchDataStrategyImpl; exports.stripIndexParam = stripIndexParam; exports.singleFetchUrl = singleFetchUrl; exports.decodeViaTurboStream = decodeViaTurboStream; exports.DataRouterContext = DataRouterContext; exports.DataRouterStateContext = DataRouterStateContext; exports.RSCRouterContext = RSCRouterContext; exports.ViewTransitionContext = ViewTransitionContext; exports.FetchersContext = FetchersContext; exports.AwaitContext = AwaitContext; exports.NavigationContext = NavigationContext; exports.LocationContext = LocationContext; exports.RouteContext = RouteContext; exports.ENABLE_DEV_WARNINGS = ENABLE_DEV_WARNINGS; exports.warnOnce = warnOnce; exports.useHref = useHref; exports.useInRouterContext = useInRouterContext; exports.useLocation = useLocation; exports.useNavigationType = useNavigationType; exports.useMatch = useMatch; exports.useNavigate = useNavigate; exports.useOutletContext = useOutletContext; exports.useOutlet = useOutlet; exports.useParams = useParams; exports.useResolvedPath = useResolvedPath; exports.useRoutes = useRoutes; exports.useRoutesImpl = useRoutesImpl; exports._renderMatches = _renderMatches; exports.useRouteId = useRouteId; exports.useNavigation = useNavigation; exports.useRevalidator = useRevalidator; exports.useMatches = useMatches; exports.useLoaderData = useLoaderData; exports.useRouteLoaderData = useRouteLoaderData; exports.useActionData = useActionData; exports.useRouteError = useRouteError; exports.useAsyncValue = useAsyncValue; exports.useAsyncError = useAsyncError; exports.useBlocker = useBlocker; exports.RemixErrorBoundary = RemixErrorBoundary; exports.createServerRoutes = createServerRoutes; exports.createClientRoutesWithHMRRevalidationOptOut = createClientRoutesWithHMRRevalidationOptOut; exports.noActionDefinedError = noActionDefinedError; exports.createClientRoutes = createClientRoutes; exports.shouldHydrateRouteLoader = shouldHydrateRouteLoader; exports.getPatchRoutesOnNavigationFunction = getPatchRoutesOnNavigationFunction; exports.useFogOFWarDiscovery = useFogOFWarDiscovery; exports.getManifestPath = getManifestPath; exports.FrameworkContext = FrameworkContext; exports.usePrefetchBehavior = usePrefetchBehavior; exports.CRITICAL_CSS_DATA_ATTRIBUTE = CRITICAL_CSS_DATA_ATTRIBUTE; exports.Links = Links; exports.PrefetchPageLinks = PrefetchPageLinks; exports.Meta = Meta; exports.setIsHydrated = setIsHydrated; exports.Scripts = Scripts; exports.mergeRefs = mergeRefs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}