{"ast":null,"code":"var _jsxFileName = \"/Users/sagiav/Documents/Prof Stuff/Github-Hackathon/Constellate/house-finder-web/src/features/ReviewInsights.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReviewInsights({\n  home\n}) {\n  _s();\n  const [reviews, setReviews] = useState([]);\n\n  // Placeholder: Replace with real Reddit/Google Maps review fetching\n  useEffect(() => {\n    setReviews([{\n      source: 'Reddit',\n      text: 'Great neighborhood, friendly people.'\n    }, {\n      source: 'Google Maps',\n      text: 'Close to parks and schools.'\n    }]);\n  }, [home]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"What people are saying about \", home.address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reviews.map((review, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [review.source, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), \" \", review.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewInsights, \"FPrwLLWcZBXrtWYcIRYMKBd2Ocw=\");\n_c = ReviewInsights;\nvar _c;\n$RefreshReg$(_c, \"ReviewInsights\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ReviewInsights","home","_s","reviews","setReviews","source","text","style","marginTop","children","address","fileName","_jsxFileName","lineNumber","columnNumber","map","review","idx","_c","$RefreshReg$"],"sources":["/Users/sagiav/Documents/Prof Stuff/Github-Hackathon/Constellate/house-finder-web/src/features/ReviewInsights.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function ReviewInsights({ home }) {\n  const [reviews, setReviews] = useState([]);\n\n  // Placeholder: Replace with real Reddit/Google Maps review fetching\n  useEffect(() => {\n    setReviews([\n      { source: 'Reddit', text: 'Great neighborhood, friendly people.' },\n      { source: 'Google Maps', text: 'Close to parks and schools.' }\n    ]);\n  }, [home]);\n\n  return (\n    <div style={{ marginTop: 24 }}>\n      <h4>What people are saying about {home.address}</h4>\n      <ul>\n        {reviews.map((review, idx) => (\n          <li key={idx}><b>{review.source}:</b> {review.text}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAD,SAAS,CAAC,MAAM;IACdQ,UAAU,CAAC,CACT;MAAEC,MAAM,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAuC,CAAC,EAClE;MAAED,MAAM,EAAE,aAAa;MAAEC,IAAI,EAAE;IAA8B,CAAC,CAC/D,CAAC;EACJ,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,oBACEF,OAAA;IAAKQ,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC5BV,OAAA;MAAAU,QAAA,GAAI,+BAA6B,EAACR,IAAI,CAACS,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpDf,OAAA;MAAAU,QAAA,EACGN,OAAO,CAACY,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,kBACvBlB,OAAA;QAAAU,QAAA,gBAAcV,OAAA;UAAAU,QAAA,GAAIO,MAAM,CAACX,MAAM,EAAC,GAAC;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAACE,MAAM,CAACV,IAAI;MAAA,GAAzCW,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACZ,EAAA,CArBuBF,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}